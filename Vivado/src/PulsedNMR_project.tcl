#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# PulsedNMR_project.tcl: Tcl script for re-creating project 'PulsedNMR'
#
# Generated by Vivado on Wed Oct 13 13:59:28 CEST 2021
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (PulsedNMR_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/rkortek/pulsednmr/Vivado/src/PulsedNMR.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "$origin_dir/src/PulsedNMR.xdc" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  set paths [list \
   [file normalize "$origin_dir/../localcores"] \
   [file normalize "$origin_dir/../cores"] \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "PulsedNMR"

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "PulsedNMR"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "PulsedNMR_project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-origin_dir_override\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z010clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "disable" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "3" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "3" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "3" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "3" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "3" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "3" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "3" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "34" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj
set_property -name "xsim.array_display_limit" -value "64" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../localcores"] [file normalize "$origin_dir/../cores"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "PulsedNMR_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "verilog_define" -value "TOOL_VIVADO" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../src/PulsedNMR.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../src/PulsedNMR.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7z010clg400-1" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "sim_mode" -value "post-implementation" -objects $obj
set_property -name "top" -value "PulsedNMR_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD PulsedNMR
proc cr_bd_PulsedNMR { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name PulsedNMR

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xlconcat:2.1\
  pavel-demin:user:axis_red_pitaya_adc:3.0\
  xilinx.com:ip:axis_combiner:1.1\
  pavel-demin:user:axis_red_pitaya_dac:2.0\
  xilinx.com:ip:axis_clock_converter:1.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:proc_sys_reset:5.0\
  pavel-demin:user:axi_cfg_register:1.0\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  pavel-demin:user:axis_fifo:1.0\
  tijs-roon:user:axis_sniffer:1.0\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:fifo_generator:13.2\
  xilinx.com:ip:fir_compiler:7.2\
  pavel-demin:user:axis_constant:1.0\
  pavel-demin:user:axi_axis_reader:1.1\
  pavel-demin:user:axi_sts_register:1.0\
  tijs-roon:user:NMRPulseSequencer:1.1\
  pavel-demin:user:axis_zeroer:1.0\
  xilinx.com:ip:xbip_dsp48_macro:3.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:cic_compiler:4.0\
  pavel-demin:user:axis_variable:1.0\
  xilinx.com:ip:cmpy:6.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: TxConfigReg
proc create_hier_cell_TxConfigReg { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_TxConfigReg() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI


  # Create pins
  create_bd_pin -dir O -from 31 -to 0 ABdly
  create_bd_pin -dir O -from 31 -to 0 Alen
  create_bd_pin -dir O -from 15 -to 0 BBcnt
  create_bd_pin -dir O -from 31 -to 0 BBdly
  create_bd_pin -dir O -from 31 -to 0 BlankLen
  create_bd_pin -dir O -from 31 -to 0 Blen
  create_bd_pin -dir O -from 31 -to 0 PIR
  create_bd_pin -dir O -from 15 -to 0 PwrOut
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn

  # Create instance: cfg_tx, and set properties
  set cfg_tx [ create_bd_cell -type ip -vlnv pavel-demin:user:axi_cfg_register:1.0 cfg_tx ]
  set_property -dict [ list \
   CONFIG.AXI_ADDR_WIDTH {32} \
   CONFIG.AXI_DATA_WIDTH {32} \
   CONFIG.CFG_DATA_WIDTH {224} \
 ] $cfg_tx

  # Create instance: slice_BlankLen, and set properties
  set slice_BlankLen [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_BlankLen ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {223} \
   CONFIG.DIN_TO {192} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {32} \
 ] $slice_BlankLen

  # Create instance: slice_abdly, and set properties
  set slice_abdly [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_abdly ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {127} \
   CONFIG.DIN_TO {96} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {32} \
 ] $slice_abdly

  # Create instance: slice_alen, and set properties
  set slice_alen [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_alen ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {63} \
   CONFIG.DIN_TO {32} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {32} \
 ] $slice_alen

  # Create instance: slice_bbcnt, and set properties
  set slice_bbcnt [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_bbcnt ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {175} \
   CONFIG.DIN_TO {160} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {16} \
 ] $slice_bbcnt

  # Create instance: slice_bbdly, and set properties
  set slice_bbdly [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_bbdly ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {159} \
   CONFIG.DIN_TO {128} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {32} \
 ] $slice_bbdly

  # Create instance: slice_blen, and set properties
  set slice_blen [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_blen ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {95} \
   CONFIG.DIN_TO {64} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {32} \
 ] $slice_blen

  # Create instance: slice_pir, and set properties
  set slice_pir [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_pir ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {32} \
 ] $slice_pir

  # Create instance: slice_pwrout, and set properties
  set slice_pwrout [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 slice_pwrout ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {191} \
   CONFIG.DIN_TO {176} \
   CONFIG.DIN_WIDTH {224} \
   CONFIG.DOUT_WIDTH {16} \
 ] $slice_pwrout

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXI_CFG_1 [get_bd_intf_pins S_AXI] [get_bd_intf_pins cfg_tx/S_AXI]

  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins cfg_tx/cfg_data] [get_bd_pins slice_BlankLen/Din] [get_bd_pins slice_abdly/Din] [get_bd_pins slice_alen/Din] [get_bd_pins slice_bbcnt/Din] [get_bd_pins slice_bbdly/Din] [get_bd_pins slice_blen/Din] [get_bd_pins slice_pir/Din] [get_bd_pins slice_pwrout/Din]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins cfg_tx/aclk]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins aresetn] [get_bd_pins cfg_tx/aresetn]
  connect_bd_net -net slice_BlankLen_Dout [get_bd_pins BlankLen] [get_bd_pins slice_BlankLen/Dout]
  connect_bd_net -net slice_abdly_Dout [get_bd_pins ABdly] [get_bd_pins slice_abdly/Dout]
  connect_bd_net -net slice_alen_Dout [get_bd_pins Alen] [get_bd_pins slice_alen/Dout]
  connect_bd_net -net slice_bbcnt_Dout [get_bd_pins BBcnt] [get_bd_pins slice_bbcnt/Dout]
  connect_bd_net -net slice_bbdly_Dout [get_bd_pins BBdly] [get_bd_pins slice_bbdly/Dout]
  connect_bd_net -net slice_blen_Dout [get_bd_pins Blen] [get_bd_pins slice_blen/Dout]
  connect_bd_net -net slice_pir_Dout [get_bd_pins PIR] [get_bd_pins slice_pir/Dout]
  connect_bd_net -net slice_pwrout_Dout [get_bd_pins PwrOut] [get_bd_pins slice_pwrout/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: mixer_0
proc create_hier_cell_mixer_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_mixer_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_IF

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LO

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RF


  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn

  # Create instance: axis_subset_converter_1, and set properties
  set axis_subset_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_1 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
   CONFIG.TDATA_REMAP {18'b0,tdata[13:0]} \
 ] $axis_subset_converter_1

  # Create instance: mult_0, and set properties
  set mult_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 mult_0 ]
  set_property -dict [ list \
   CONFIG.APortWidth {14} \
   CONFIG.BPortWidth {16} \
   CONFIG.FlowControl {Blocking} \
   CONFIG.MinimumLatency {9} \
   CONFIG.OutputWidth {31} \
   CONFIG.RoundMode {Truncate} \
 ] $mult_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_A_1 [get_bd_intf_pins S_AXIS_RF] [get_bd_intf_pins axis_subset_converter_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_1_M_AXIS [get_bd_intf_pins axis_subset_converter_1/M_AXIS] [get_bd_intf_pins mult_0/S_AXIS_A]
  connect_bd_intf_net -intf_net dds_0_M_AXIS_DATA [get_bd_intf_pins S_AXIS_LO] [get_bd_intf_pins mult_0/S_AXIS_B]
  connect_bd_intf_net -intf_net mult_0_M_AXIS_DOUT [get_bd_intf_pins M_AXIS_IF] [get_bd_intf_pins mult_0/M_AXIS_DOUT]

  # Create port connections
  connect_bd_net -net m_axis_aclk_1 [get_bd_pins aclk] [get_bd_pins axis_subset_converter_1/aclk] [get_bd_pins mult_0/aclk]
  connect_bd_net -net m_axis_aresetn_1 [get_bd_pins aresetn] [get_bd_pins axis_subset_converter_1/aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: cic_0
proc create_hier_cell_cic_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_cic_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS


  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn
  create_bd_pin -dir I -from 15 -to 0 cfg_data

  # Create instance: bcast_0, and set properties
  set bcast_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 bcast_0 ]
  set_property -dict [ list \
   CONFIG.M00_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[63:32]} \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
 ] $bcast_0

  # Create instance: cic_0, and set properties
  set cic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {125} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {625} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.HAS_DOUT_TREADY {true} \
   CONFIG.Input_Data_Width {30} \
   CONFIG.Input_Sample_Frequency {125} \
   CONFIG.Maximum_Rate {8192} \
   CONFIG.Minimum_Rate {25} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {32} \
   CONFIG.Quantization {Truncation} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
   CONFIG.Use_Xtreme_DSP_Slice {false} \
 ] $cic_0

  # Create instance: cic_1, and set properties
  set cic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {125} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Fixed_Or_Initial_Rate {625} \
   CONFIG.HAS_ARESETN {true} \
   CONFIG.HAS_DOUT_TREADY {true} \
   CONFIG.Input_Data_Width {30} \
   CONFIG.Input_Sample_Frequency {125} \
   CONFIG.Maximum_Rate {8192} \
   CONFIG.Minimum_Rate {25} \
   CONFIG.Number_Of_Stages {6} \
   CONFIG.Output_Data_Width {32} \
   CONFIG.Quantization {Truncation} \
   CONFIG.SamplePeriod {1} \
   CONFIG.Sample_Rate_Changes {Programmable} \
   CONFIG.Use_Xtreme_DSP_Slice {false} \
 ] $cic_1

  # Create instance: comb_0, and set properties
  set comb_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 comb_0 ]
  set_property -dict [ list \
   CONFIG.TDATA_NUM_BYTES {4} \
 ] $comb_0

  # Create instance: rate_0, and set properties
  set rate_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_variable:1.0 rate_0 ]
  set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $rate_0

  # Create instance: rate_1, and set properties
  set rate_1 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_variable:1.0 rate_1 ]
  set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $rate_1

  # Create interface connections
  connect_bd_intf_net -intf_net bcast_0_M00_AXIS [get_bd_intf_pins bcast_0/M00_AXIS] [get_bd_intf_pins cic_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net bcast_0_M01_AXIS [get_bd_intf_pins bcast_0/M01_AXIS] [get_bd_intf_pins cic_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net cic_1_M_AXIS_DATA [get_bd_intf_pins cic_1/M_AXIS_DATA] [get_bd_intf_pins comb_0/S01_AXIS]
  connect_bd_intf_net -intf_net cic_2_M_AXIS_DATA [get_bd_intf_pins cic_0/M_AXIS_DATA] [get_bd_intf_pins comb_0/S00_AXIS]
  connect_bd_intf_net -intf_net comb_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins comb_0/M_AXIS]
  connect_bd_intf_net -intf_net mult_0_M_AXIS_DOUT [get_bd_intf_pins S_AXIS] [get_bd_intf_pins bcast_0/S_AXIS]
  connect_bd_intf_net -intf_net rate_0_M_AXIS [get_bd_intf_pins cic_0/S_AXIS_CONFIG] [get_bd_intf_pins rate_0/M_AXIS]
  connect_bd_intf_net -intf_net rate_1_M_AXIS [get_bd_intf_pins cic_1/S_AXIS_CONFIG] [get_bd_intf_pins rate_1/M_AXIS]

  # Create port connections
  connect_bd_net -net cfg_data_1 [get_bd_pins cfg_data] [get_bd_pins rate_0/data_in] [get_bd_pins rate_1/data_in]
  connect_bd_net -net m_axis_aclk_1 [get_bd_pins aclk] [get_bd_pins bcast_0/aclk] [get_bd_pins cic_0/aclk] [get_bd_pins cic_1/aclk] [get_bd_pins comb_0/aclk] [get_bd_pins rate_0/m_axis_aclk] [get_bd_pins rate_1/m_axis_aclk]
  connect_bd_net -net m_axis_aresetn_1 [get_bd_pins aresetn] [get_bd_pins bcast_0/aresetn] [get_bd_pins cic_0/aresetn] [get_bd_pins cic_1/aresetn] [get_bd_pins comb_0/aresetn] [get_bd_pins rate_0/m_axis_aresetn] [get_bd_pins rate_1/m_axis_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: tx_0
proc create_hier_cell_tx_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_tx_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_TX

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_CFG


  # Create pins
  create_bd_pin -dir I -type rst TxReset
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn_dds
  create_bd_pin -dir O -type data blank
  create_bd_pin -dir I -type data pulse_on_in
  create_bd_pin -dir O -type data pulse_out
  create_bd_pin -dir I -type rst s_axis_aresetn
  create_bd_pin -dir O sync

  # Create instance: NMRPulseSequencer_1, and set properties
  set NMRPulseSequencer_1 [ create_bd_cell -type ip -vlnv tijs-roon:user:NMRPulseSequencer:1.1 NMRPulseSequencer_1 ]
  set_property -dict [ list \
   CONFIG.US_DIVIDER {125} \
 ] $NMRPulseSequencer_1

  # Create instance: TxConfigReg
  create_hier_cell_TxConfigReg $hier_obj TxConfigReg

  # Create instance: axis_zeroer_0, and set properties
  set axis_zeroer_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_zeroer:1.0 axis_zeroer_0 ]
  set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {16} \
 ] $axis_zeroer_0

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {125} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_ACLKEN {false} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {14} \
   CONFIG.Latency_Configuration {Auto} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.M_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Negative_Sine {false} \
   CONFIG.Noise_Shaping {Taylor_Series_Corrected} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Selection {Sine} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.PartsPresent {Phase_Generator_and_SIN_COS_LUT} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {30} \
   CONFIG.Resync {false} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {45} \
 ] $dds_compiler_0

  # Create instance: dsp48_multip_0, and set properties
  set dsp48_multip_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xbip_dsp48_macro:3.0 dsp48_multip_0 ]
  set_property -dict [ list \
   CONFIG.a_width {16} \
   CONFIG.areg_3 {true} \
   CONFIG.areg_4 {true} \
   CONFIG.b_width {17} \
   CONFIG.breg_3 {true} \
   CONFIG.breg_4 {true} \
   CONFIG.cinreg_3 {true} \
   CONFIG.cinreg_4 {true} \
   CONFIG.cinreg_5 {true} \
   CONFIG.creg_3 {false} \
   CONFIG.creg_4 {false} \
   CONFIG.creg_5 {false} \
   CONFIG.instruction1 {RNDSIMPLE(A*B+CARRYIN)} \
   CONFIG.mreg_5 {true} \
   CONFIG.output_properties {User_Defined} \
   CONFIG.p_binarywidth {0} \
   CONFIG.p_full_width {33} \
   CONFIG.p_width {15} \
   CONFIG.preg_6 {true} \
 ] $dsp48_multip_0

  # Create instance: pir_tx, and set properties
  set pir_tx [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_constant:1.0 pir_tx ]
  set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {32} \
 ] $pir_tx

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {15} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {16} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_1

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {1} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXI_CFG_1 [get_bd_intf_pins S_AXI_CFG] [get_bd_intf_pins TxConfigReg/S_AXI]
  connect_bd_intf_net -intf_net axis_zeroer_0_M_AXIS [get_bd_intf_pins M_AXIS_TX] [get_bd_intf_pins axis_zeroer_0/M_AXIS]
  connect_bd_intf_net -intf_net pir_tx_M_AXIS [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE] [get_bd_intf_pins pir_tx/M_AXIS]

  # Create port connections
  connect_bd_net -net NMRPulseSequencer_0_pulse_on [get_bd_pins pulse_out] [get_bd_pins NMRPulseSequencer_1/pulse_out] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net NMRPulseSequencer_1_blank_out [get_bd_pins blank] [get_bd_pins NMRPulseSequencer_1/blank_out]
  connect_bd_net -net NMRPulseSequencer_1_sync_out [get_bd_pins sync] [get_bd_pins NMRPulseSequencer_1/sync_out]
  connect_bd_net -net RxReset_1 [get_bd_pins TxReset] [get_bd_pins NMRPulseSequencer_1/rst]
  connect_bd_net -net TxConfigReg_ABdly [get_bd_pins NMRPulseSequencer_1/ABdly_in] [get_bd_pins TxConfigReg/ABdly]
  connect_bd_net -net TxConfigReg_Alen [get_bd_pins NMRPulseSequencer_1/Alen_in] [get_bd_pins TxConfigReg/Alen]
  connect_bd_net -net TxConfigReg_BBcnt [get_bd_pins NMRPulseSequencer_1/BBcnt_in] [get_bd_pins TxConfigReg/BBcnt]
  connect_bd_net -net TxConfigReg_BBdly [get_bd_pins NMRPulseSequencer_1/BBdly_in] [get_bd_pins TxConfigReg/BBdly]
  connect_bd_net -net TxConfigReg_BlankLen [get_bd_pins NMRPulseSequencer_1/BlankLen_in] [get_bd_pins TxConfigReg/BlankLen]
  connect_bd_net -net TxConfigReg_Blen [get_bd_pins NMRPulseSequencer_1/Blen_in] [get_bd_pins TxConfigReg/Blen]
  connect_bd_net -net TxConfigReg_PIR [get_bd_pins TxConfigReg/PIR] [get_bd_pins pir_tx/cfg_data]
  connect_bd_net -net TxConfigReg_PwrOut [get_bd_pins TxConfigReg/PwrOut] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins NMRPulseSequencer_1/clk] [get_bd_pins TxConfigReg/aclk] [get_bd_pins axis_zeroer_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins dsp48_multip_0/CLK] [get_bd_pins pir_tx/aclk]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn_dds] [get_bd_pins dds_compiler_0/aresetn]
  connect_bd_net -net axis_zeroer_0_s_axis_tready [get_bd_pins axis_zeroer_0/s_axis_tready] [get_bd_pins dds_compiler_0/m_axis_data_tready]
  connect_bd_net -net dds_compiler_0_m_axis_data_tdata [get_bd_pins dds_compiler_0/m_axis_data_tdata] [get_bd_pins dsp48_multip_0/A]
  connect_bd_net -net dds_compiler_0_m_axis_data_tvalid [get_bd_pins axis_zeroer_0/s_axis_tvalid] [get_bd_pins dds_compiler_0/m_axis_data_tvalid]
  connect_bd_net -net pulse_on_in_1 [get_bd_pins pulse_on_in] [get_bd_pins NMRPulseSequencer_1/force_on]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins TxConfigReg/aresetn]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins axis_zeroer_0/zero] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xbip_dsp48_macro_0_P [get_bd_pins dsp48_multip_0/P] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins axis_zeroer_0/s_axis_tdata] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins dsp48_multip_0/B] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: rx_0
proc create_hier_cell_rx_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_rx_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DAC1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI

  create_bd_intf_pin -mode Monitor -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS

  create_bd_intf_pin -mode Monitor -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LO

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RF

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_OUT


  # Create pins
  create_bd_pin -dir I -from 31 -to 0 RxPIR
  create_bd_pin -dir I -from 15 -to 0 RxRate
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 0 -to 0 -type rst aresetn
  create_bd_pin -dir I -type rst aresetn_dds
  create_bd_pin -dir I reset_fifo

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_fifo_0, and set properties
  set axis_fifo_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_fifo:1.0 axis_fifo_0 ]
  set_property -dict [ list \
   CONFIG.M_AXIS_TDATA_WIDTH {32} \
   CONFIG.S_AXIS_TDATA_WIDTH {64} \
 ] $axis_fifo_0

  # Create instance: axis_sniffer_0, and set properties
  set axis_sniffer_0 [ create_bd_cell -type ip -vlnv tijs-roon:user:axis_sniffer:1.0 axis_sniffer_0 ]
  set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {64} \
 ] $axis_sniffer_0

  # Create instance: axis_subset_converter_1, and set properties
  set axis_subset_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_1 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {2} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
   CONFIG.TDATA_REMAP {2'b00, tdata[30:17]} \
 ] $axis_subset_converter_1

  # Create instance: cic_0
  create_hier_cell_cic_0 $hier_obj cic_0

  # Create instance: conv_0, and set properties
  set conv_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 conv_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
 ] $conv_0

  # Create instance: dds_0, and set properties
  set dds_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_0 ]
  set_property -dict [ list \
   CONFIG.DDS_Clock_Rate {125} \
   CONFIG.DSP48_Use {Minimal} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {13} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Negative_Sine {false} \
   CONFIG.Noise_Shaping {None} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {0} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.PartsPresent {Phase_Generator_and_SIN_COS_LUT} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {30} \
   CONFIG.Resync {false} \
   CONFIG.Spurious_Free_Dynamic_Range {45} \
 ] $dds_0

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Data_Count {false} \
   CONFIG.Data_Count_Width {14} \
   CONFIG.Empty_Threshold_Assert_Value {4} \
   CONFIG.Empty_Threshold_Negate_Value {5} \
   CONFIG.Enable_Safety_Circuit {false} \
   CONFIG.Full_Flags_Reset_Value {0} \
   CONFIG.Full_Threshold_Assert_Value {8189} \
   CONFIG.Full_Threshold_Negate_Value {8188} \
   CONFIG.Input_Data_Width {64} \
   CONFIG.Input_Depth {8192} \
   CONFIG.Output_Data_Width {32} \
   CONFIG.Output_Depth {16384} \
   CONFIG.Performance_Options {First_Word_Fall_Through} \
   CONFIG.Read_Data_Count {true} \
   CONFIG.Read_Data_Count_Width {15} \
   CONFIG.Reset_Type {Synchronous_Reset} \
   CONFIG.Use_Extra_Logic {true} \
   CONFIG.Write_Data_Count_Width {14} \
 ] $fifo_generator_0

  # Create instance: fir_0, and set properties
  set fir_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_0 ]
  set_property -dict [ list \
   CONFIG.BestPrecision {true} \
   CONFIG.Clock_Frequency {125} \
   CONFIG.CoefficientVector {-1.6472113056e-08, -4.7275060561e-08, -7.7431048180e-10, 3.0903860136e-08, 1.8580664775e-08, 3.2714281320e-08, -6.2515870285e-09, -1.5212421546e-07, -8.3024102014e-08, 3.1421287283e-07, 3.0541061907e-07, -4.7367916408e-07, -7.1290982678e-07, 5.4673392936e-07, 1.3334649132e-06, -4.1364098644e-07, -2.1485949525e-06, -6.7829977410e-08, 3.0726845332e-06, 1.0362499293e-06, -3.9407657887e-06, -2.5897362011e-06, 4.5112332508e-06, 4.7436885121e-06, -4.4887077258e-06, -7.3916945269e-06, 3.5688710327e-06, 1.0280353312e-05, -1.5024372933e-06, -1.3009229990e-05, -1.8303781261e-06, 1.5064716289e-05, 6.3487776401e-06, -1.5891625499e-05, -1.1721675486e-05, 1.4997961053e-05, 1.7356048979e-05, -1.2084227227e-05, -2.2446408027e-05, 7.1644345011e-06, 2.6079710827e-05, -6.6454989299e-07, -2.7404912150e-05, -6.5427500664e-06, 2.5842003924e-05, 1.3190154000e-05, -2.1299612136e-05, -1.7771633363e-05, 1.4356250995e-05, 1.8800552428e-05, -6.3558764252e-06, -1.5147259248e-05, -6.2897066014e-07, 6.4094323907e-06, 3.9982503227e-06, 6.7506282624e-06, -9.9796014867e-07, -2.2380212454e-05, -1.0759547197e-05, 3.7195306717e-05, 3.2677486281e-05, -4.6811898990e-05, -6.4599447382e-05, 4.6210324771e-05, 1.0431120674e-04, -3.0503826568e-05, -1.4732577300e-04, -4.1258453650e-06, 1.8701663321e-04, 5.9427713818e-05, -2.1517847459e-04, -1.3418896425e-04, 2.2301952102e-04, 2.2363993628e-04, -2.0251435162e-04, -3.1934040767e-04, 1.4796009669e-04, 4.0968443718e-04, -5.7507336159e-05, -4.8108463752e-04, -6.5614839363e-05, 5.1978739429e-04, 2.1246715982e-04, -5.1416395507e-04, -3.6866549936e-04, 4.5707019142e-04, 5.1550012249e-04, -3.4818706949e-04, -6.3230445935e-04, 1.9550609650e-04, 6.9955714665e-04, -1.5827253275e-05, -7.0258143521e-04, -1.6617637952e-04, 6.3529569901e-04, 3.2048789072e-04, -5.0340105072e-04, -4.1582530241e-04, 3.2634180427e-04, 4.2496083963e-04, -1.3743221406e-04, -3.3071450507e-04, -1.8305167738e-05, 1.3182485134e-04, 8.8784066371e-05, 1.5224742206e-04, -2.1850002011e-05, -4.7861967162e-04, -2.2609003083e-04, 7.8079557647e-04, 6.7984527906e-04, -9.7283144780e-04, -1.3363233256e-03, 9.5648007150e-04, 2.1563565688e-03, -6.3230621305e-04, -3.0596594938e-03, -8.6386881070e-05, 3.9239359768e-03, 1.2579439516e-03, -4.5890114465e-03, -2.8966063910e-03, 4.8663498835e-03, 4.9583669373e-03, -4.5537073976e-03, -7.3301527521e-03, 3.4540124085e-03, 9.8237515984e-03, -1.3969575800e-03, -1.2175276174e-02, -1.7386657056e-03, 1.4049779174e-02, 6.0029171665e-03, -1.5052324818e-02, -1.1359609346e-02, 1.4735662483e-02, 1.7670980642e-02, -1.2608162870e-02, -2.4690698016e-02, 8.1251717279e-03, 3.2057724080e-02, -6.4695302151e-04, -3.9282618887e-02, -1.0679394699e-02, 4.5698136555e-02, 2.7221106971e-02, -5.0282300258e-02, -5.1663864823e-02, 5.0987249628e-02, 9.0485392483e-02, -4.1603111790e-02, -1.6361436263e-01, -1.0704456365e-02, 3.5628695792e-01, 5.5459922084e-01, 3.5628695792e-01, -1.0704456365e-02, -1.6361436263e-01, -4.1603111790e-02, 9.0485392483e-02, 5.0987249628e-02, -5.1663864823e-02, -5.0282300258e-02, 2.7221106971e-02, 4.5698136555e-02, -1.0679394699e-02, -3.9282618887e-02, -6.4695302151e-04, 3.2057724080e-02, 8.1251717279e-03, -2.4690698016e-02, -1.2608162870e-02, 1.7670980642e-02, 1.4735662483e-02, -1.1359609346e-02, -1.5052324818e-02, 6.0029171665e-03, 1.4049779174e-02, -1.7386657056e-03, -1.2175276174e-02, -1.3969575800e-03, 9.8237515984e-03, 3.4540124085e-03, -7.3301527521e-03, -4.5537073976e-03, 4.9583669373e-03, 4.8663498835e-03, -2.8966063910e-03, -4.5890114465e-03, 1.2579439516e-03, 3.9239359768e-03, -8.6386881070e-05, -3.0596594938e-03, -6.3230621305e-04, 2.1563565688e-03, 9.5648007150e-04, -1.3363233256e-03, -9.7283144780e-04, 6.7984527906e-04, 7.8079557647e-04, -2.2609003083e-04, -4.7861967162e-04, -2.1850002011e-05, 1.5224742206e-04, 8.8784066371e-05, 1.3182485134e-04, -1.8305167738e-05, -3.3071450507e-04, -1.3743221406e-04, 4.2496083963e-04, 3.2634180427e-04, -4.1582530241e-04, -5.0340105072e-04, 3.2048789072e-04, 6.3529569901e-04, -1.6617637952e-04, -7.0258143521e-04, -1.5827253275e-05, 6.9955714665e-04, 1.9550609650e-04, -6.3230445935e-04, -3.4818706949e-04, 5.1550012249e-04, 4.5707019142e-04, -3.6866549936e-04, -5.1416395507e-04, 2.1246715982e-04, 5.1978739429e-04, -6.5614839363e-05, -4.8108463752e-04, -5.7507336159e-05, 4.0968443718e-04, 1.4796009669e-04, -3.1934040767e-04, -2.0251435162e-04, 2.2363993628e-04, 2.2301952102e-04, -1.3418896425e-04, -2.1517847459e-04, 5.9427713818e-05, 1.8701663321e-04, -4.1258453650e-06, -1.4732577300e-04, -3.0503826568e-05, 1.0431120674e-04, 4.6210324771e-05, -6.4599447382e-05, -4.6811898990e-05, 3.2677486281e-05, 3.7195306717e-05, -1.0759547197e-05, -2.2380212454e-05, -9.9796014867e-07, 6.7506282624e-06, 3.9982503227e-06, 6.4094323907e-06, -6.2897066014e-07, -1.5147259248e-05, -6.3558764252e-06, 1.8800552428e-05, 1.4356250995e-05, -1.7771633363e-05, -2.1299612136e-05, 1.3190154000e-05, 2.5842003924e-05, -6.5427500664e-06, -2.7404912150e-05, -6.6454989299e-07, 2.6079710827e-05, 7.1644345011e-06, -2.2446408027e-05, -1.2084227227e-05, 1.7356048979e-05, 1.4997961053e-05, -1.1721675486e-05, -1.5891625499e-05, 6.3487776401e-06, 1.5064716289e-05, -1.8303781261e-06, -1.3009229990e-05, -1.5024372933e-06, 1.0280353312e-05, 3.5688710327e-06, -7.3916945269e-06, -4.4887077258e-06, 4.7436885121e-06, 4.5112332508e-06, -2.5897362011e-06, -3.9407657887e-06, 1.0362499293e-06, 3.0726845332e-06, -6.7829977410e-08, -2.1485949525e-06, -4.1364098644e-07, 1.3334649132e-06, 5.4673392936e-07, -7.1290982678e-07, -4.7367916408e-07, 3.0541061907e-07, 3.1421287283e-07, -8.3024102014e-08, -1.5212421546e-07, -6.2515870285e-09, 3.2714281320e-08, 1.8580664775e-08, 3.0903860136e-08, -7.7431048180e-10, -4.7275060561e-08, -1.6472113056e-08} \
   CONFIG.Coefficient_Fractional_Bits {23} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {24} \
   CONFIG.ColumnConfig {7} \
   CONFIG.Data_Fractional_Bits {0} \
   CONFIG.Data_Width {32} \
   CONFIG.Decimation_Rate {2} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Has_ARESETn {true} \
   CONFIG.M_DATA_Has_TREADY {true} \
   CONFIG.Number_Channels {2} \
   CONFIG.Number_Paths {1} \
   CONFIG.Output_Rounding_Mode {Convergent_Rounding_to_Even} \
   CONFIG.Output_Width {32} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.Sample_Frequency {5.0} \
 ] $fir_0

  # Create instance: mixer_0
  create_hier_cell_mixer_0 $hier_obj mixer_0

  # Create instance: pir_rx, and set properties
  set pir_rx [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_constant:1.0 pir_rx ]
  set_property -dict [ list \
   CONFIG.AXIS_TDATA_WIDTH {32} \
 ] $pir_rx

  # Create instance: reader_rx, and set properties
  set reader_rx [ create_bd_cell -type ip -vlnv pavel-demin:user:axi_axis_reader:1.1 reader_rx ]
  set_property -dict [ list \
   CONFIG.AXI_ADDR_WIDTH {32} \
   CONFIG.AXI_DATA_WIDTH {32} \
 ] $reader_rx

  # Create instance: sts_rx, and set properties
  set sts_rx [ create_bd_cell -type ip -vlnv pavel-demin:user:axi_sts_register:1.0 sts_rx ]
  set_property -dict [ list \
   CONFIG.AXI_ADDR_WIDTH {32} \
   CONFIG.AXI_DATA_WIDTH {32} \
   CONFIG.STS_DATA_WIDTH {32} \
 ] $sts_rx

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN1_WIDTH {17} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXIS_RF] [get_bd_intf_pins mixer_0/S_AXIS_RF]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S_AXI_OUT] [get_bd_intf_pins reader_rx/S_AXI]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S_AXI] [get_bd_intf_pins sts_rx/S_AXI]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins axis_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_fifo_0_FIFO_READ [get_bd_intf_pins axis_fifo_0/FIFO_READ] [get_bd_intf_pins fifo_generator_0/FIFO_READ]
  connect_bd_intf_net -intf_net axis_fifo_0_FIFO_WRITE [get_bd_intf_pins axis_fifo_0/FIFO_WRITE] [get_bd_intf_pins fifo_generator_0/FIFO_WRITE]
  connect_bd_intf_net -intf_net axis_fifo_0_M_AXIS [get_bd_intf_pins axis_fifo_0/M_AXIS] [get_bd_intf_pins reader_rx/S_AXIS]
  connect_bd_intf_net -intf_net axis_sniffer_0_M_AXIS [get_bd_intf_pins axis_sniffer_0/M_AXIS] [get_bd_intf_pins cic_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_sniffer_0_M_AXIS_SNIF [get_bd_intf_pins axis_sniffer_0/M_AXIS_SNIF] [get_bd_intf_pins axis_subset_converter_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_1_M_AXIS [get_bd_intf_pins M_AXIS_DAC1] [get_bd_intf_pins axis_subset_converter_1/M_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets axis_subset_converter_1_M_AXIS]
  connect_bd_intf_net -intf_net comb_0_M_AXIS [get_bd_intf_pins cic_0/M_AXIS] [get_bd_intf_pins conv_0/S_AXIS]
  connect_bd_intf_net -intf_net conv_0_M_AXIS [get_bd_intf_pins conv_0/M_AXIS] [get_bd_intf_pins fir_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net dds_0_M_AXIS_DATA [get_bd_intf_pins dds_0/M_AXIS_DATA] [get_bd_intf_pins mixer_0/S_AXIS_LO]
  connect_bd_intf_net -intf_net [get_bd_intf_nets dds_0_M_AXIS_DATA] [get_bd_intf_pins S_AXIS_LO] [get_bd_intf_pins dds_0/M_AXIS_DATA]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets dds_0_M_AXIS_DATA]
  connect_bd_intf_net -intf_net fir_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS] [get_bd_intf_pins fir_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net mixer_0_M_AXIS_DOUT [get_bd_intf_pins axis_sniffer_0/S_AXIS] [get_bd_intf_pins mixer_0/M_AXIS_IF]
  connect_bd_intf_net -intf_net [get_bd_intf_nets mixer_0_M_AXIS_DOUT] [get_bd_intf_pins S_AXIS] [get_bd_intf_pins mixer_0/M_AXIS_IF]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets mixer_0_M_AXIS_DOUT]
  connect_bd_intf_net -intf_net phase_0_M_AXIS [get_bd_intf_pins dds_0/S_AXIS_PHASE] [get_bd_intf_pins pir_rx/M_AXIS]

  # Create port connections
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_fifo_0/aclk] [get_bd_pins axis_sniffer_0/aclk] [get_bd_pins axis_subset_converter_1/aclk] [get_bd_pins cic_0/aclk] [get_bd_pins conv_0/aclk] [get_bd_pins dds_0/aclk] [get_bd_pins fifo_generator_0/clk] [get_bd_pins fir_0/aclk] [get_bd_pins mixer_0/aclk] [get_bd_pins pir_rx/aclk] [get_bd_pins reader_rx/aclk] [get_bd_pins sts_rx/aclk]
  connect_bd_net -net cfg_data_1 [get_bd_pins RxPIR] [get_bd_pins pir_rx/cfg_data]
  connect_bd_net -net fifo_generator_0_rd_data_count [get_bd_pins fifo_generator_0/rd_data_count] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net m_axis_aresetn_1 [get_bd_pins aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_sniffer_0/aresetn] [get_bd_pins axis_subset_converter_1/aresetn] [get_bd_pins cic_0/aresetn] [get_bd_pins conv_0/aresetn] [get_bd_pins fir_0/aresetn] [get_bd_pins mixer_0/aresetn] [get_bd_pins reader_rx/aresetn] [get_bd_pins sts_rx/aresetn]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets m_axis_aresetn_1]
  connect_bd_net -net slice_2_Dout [get_bd_pins RxRate] [get_bd_pins cic_0/cfg_data]
  connect_bd_net -net srst_0_1 [get_bd_pins reset_fifo] [get_bd_pins fifo_generator_0/srst] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net util_vector_logic_2_Res [get_bd_pins aresetn_dds] [get_bd_pins dds_0/aresetn]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets util_vector_logic_2_Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins sts_rx/sts_data] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: RxConfigReg
proc create_hier_cell_RxConfigReg { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_RxConfigReg() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI


  # Create pins
  create_bd_pin -dir O -from 0 -to 0 DDSReset
  create_bd_pin -dir O -from 31 -to 0 RxPIR
  create_bd_pin -dir O -from 15 -to 0 RxRate
  create_bd_pin -dir O -from 0 -to 0 TxForceOn
  create_bd_pin -dir O -from 0 -to 0 -type rst TxReset
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn
  create_bd_pin -dir O -from 0 -to 0 rx_fifo_reset

  # Create instance: cfg_rx, and set properties
  set cfg_rx [ create_bd_cell -type ip -vlnv pavel-demin:user:axi_cfg_register:1.0 cfg_rx ]
  set_property -dict [ list \
   CONFIG.AXI_ADDR_WIDTH {32} \
   CONFIG.AXI_DATA_WIDTH {32} \
   CONFIG.CFG_DATA_WIDTH {128} \
 ] $cfg_rx

  # Create instance: rxconfig_slice_0_0, and set properties
  set rxconfig_slice_0_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 rxconfig_slice_0_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {128} \
   CONFIG.DOUT_WIDTH {1} \
 ] $rxconfig_slice_0_0

  # Create instance: rxconfig_slice_16_31, and set properties
  set rxconfig_slice_16_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 rxconfig_slice_16_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {16} \
   CONFIG.DIN_WIDTH {128} \
   CONFIG.DOUT_WIDTH {16} \
 ] $rxconfig_slice_16_31

  # Create instance: rxconfig_slice_1_1, and set properties
  set rxconfig_slice_1_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 rxconfig_slice_1_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {128} \
   CONFIG.DOUT_WIDTH {1} \
 ] $rxconfig_slice_1_1

  # Create instance: rxconfig_slice_2_2, and set properties
  set rxconfig_slice_2_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 rxconfig_slice_2_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {128} \
   CONFIG.DOUT_WIDTH {1} \
 ] $rxconfig_slice_2_2

  # Create instance: rxconfig_slice_32_63, and set properties
  set rxconfig_slice_32_63 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 rxconfig_slice_32_63 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {63} \
   CONFIG.DIN_TO {32} \
   CONFIG.DIN_WIDTH {128} \
   CONFIG.DOUT_WIDTH {1} \
 ] $rxconfig_slice_32_63

  # Create instance: rxconfig_slice_7_7, and set properties
  set rxconfig_slice_7_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 rxconfig_slice_7_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DIN_WIDTH {128} \
   CONFIG.DOUT_WIDTH {1} \
 ] $rxconfig_slice_7_7

  # Create interface connections
  connect_bd_intf_net -intf_net ps_0_axi_periph_M00_AXI [get_bd_intf_pins S_AXI] [get_bd_intf_pins cfg_rx/S_AXI]

  # Create port connections
  connect_bd_net -net cfg_0_cfg_data [get_bd_pins cfg_rx/cfg_data] [get_bd_pins rxconfig_slice_0_0/Din] [get_bd_pins rxconfig_slice_16_31/Din] [get_bd_pins rxconfig_slice_1_1/Din] [get_bd_pins rxconfig_slice_2_2/Din] [get_bd_pins rxconfig_slice_32_63/Din] [get_bd_pins rxconfig_slice_7_7/Din]
  connect_bd_net -net ps_0_FCLK_CLK0 [get_bd_pins aclk] [get_bd_pins cfg_rx/aclk]
  connect_bd_net -net rst_0_peripheral_aresetn [get_bd_pins aresetn] [get_bd_pins cfg_rx/aresetn]
  connect_bd_net -net rxconfig_slice_1_2_Dout [get_bd_pins rx_fifo_reset] [get_bd_pins rxconfig_slice_2_2/Dout]
  connect_bd_net -net slice_0_Dout [get_bd_pins TxReset] [get_bd_pins rxconfig_slice_1_1/Dout]
  connect_bd_net -net slice_0b1_Dout [get_bd_pins TxForceOn] [get_bd_pins rxconfig_slice_7_7/Dout]
  connect_bd_net -net slice_2_Dout [get_bd_pins RxRate] [get_bd_pins rxconfig_slice_16_31/Dout]
  connect_bd_net -net slice_3_Dout [get_bd_pins DDSReset] [get_bd_pins rxconfig_slice_0_0/Dout]
  connect_bd_net -net slice_4_Dout [get_bd_pins RxPIR] [get_bd_pins rxconfig_slice_32_63/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PS
proc create_hier_cell_PS { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_PS() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M00_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M01_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M02_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M03_AXI


  # Create pins
  create_bd_pin -dir O -type clk FCLK_CLK0
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I dcm_locked
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn

  # Create instance: ps_0, and set properties
  set ps_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 ps_0 ]
  set_property -dict [ list \
   CONFIG.PCW_ACT_APU_PERIPHERAL_FREQMHZ {666.666687} \
   CONFIG.PCW_ACT_CAN0_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN1_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_DCI_PERIPHERAL_FREQMHZ {10.158730} \
   CONFIG.PCW_ACT_ENET0_PERIPHERAL_FREQMHZ {125.000000} \
   CONFIG.PCW_ACT_ENET1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA0_PERIPHERAL_FREQMHZ {142.857132} \
   CONFIG.PCW_ACT_FPGA1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA2_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA3_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_I2C_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_PCAP_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_QSPI_PERIPHERAL_FREQMHZ {125.000000} \
   CONFIG.PCW_ACT_SDIO_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_SMC_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_SPI_PERIPHERAL_FREQMHZ {166.666672} \
   CONFIG.PCW_ACT_TPIU_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_TTC0_CLK0_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC0_CLK1_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC0_CLK2_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK0_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK1_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK2_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_UART_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_WDT_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_APU_CLK_RATIO_ENABLE {6:2:1} \
   CONFIG.PCW_APU_PERIPHERAL_FREQMHZ {667} \
   CONFIG.PCW_ARMPLL_CTRL_FBDIV {40} \
   CONFIG.PCW_CAN0_BASEADDR {0xE0008000} \
   CONFIG.PCW_CAN0_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN0_HIGHADDR {0xE0008FFF} \
   CONFIG.PCW_CAN0_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN0_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN1_BASEADDR {0xE0009000} \
   CONFIG.PCW_CAN1_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN1_HIGHADDR {0xE0009FFF} \
   CONFIG.PCW_CAN1_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN1_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_CAN_PERIPHERAL_VALID {0} \
   CONFIG.PCW_CLK0_FREQ {142857132} \
   CONFIG.PCW_CLK1_FREQ {10000000} \
   CONFIG.PCW_CLK2_FREQ {10000000} \
   CONFIG.PCW_CLK3_FREQ {10000000} \
   CONFIG.PCW_CORE0_FIQ_INTR {0} \
   CONFIG.PCW_CORE0_IRQ_INTR {0} \
   CONFIG.PCW_CORE1_FIQ_INTR {0} \
   CONFIG.PCW_CORE1_IRQ_INTR {0} \
   CONFIG.PCW_CPU_CPU_6X4X_MAX_RANGE {667} \
   CONFIG.PCW_CPU_CPU_PLL_FREQMHZ {1333.333} \
   CONFIG.PCW_CPU_PERIPHERAL_CLKSRC {ARM PLL} \
   CONFIG.PCW_CPU_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_CRYSTAL_PERIPHERAL_FREQMHZ {33.333333} \
   CONFIG.PCW_DCI_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR0 {15} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR1 {7} \
   CONFIG.PCW_DCI_PERIPHERAL_FREQMHZ {10.159} \
   CONFIG.PCW_DDRPLL_CTRL_FBDIV {32} \
   CONFIG.PCW_DDR_DDR_PLL_FREQMHZ {1066.667} \
   CONFIG.PCW_DDR_HPRLPR_QUEUE_PARTITION {HPR(0)/LPR(32)} \
   CONFIG.PCW_DDR_HPR_TO_CRITICAL_PRIORITY_LEVEL {15} \
   CONFIG.PCW_DDR_LPR_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DDR_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DDR_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_DDR_PORT0_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT1_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT2_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT3_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_RAM_BASEADDR {0x00100000} \
   CONFIG.PCW_DDR_RAM_HIGHADDR {0x1FFFFFFF} \
   CONFIG.PCW_DDR_WRITE_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DM_WIDTH {4} \
   CONFIG.PCW_DQS_WIDTH {4} \
   CONFIG.PCW_DQ_WIDTH {32} \
   CONFIG.PCW_ENET0_BASEADDR {0xE000B000} \
   CONFIG.PCW_ENET0_ENET0_IO {MIO 16 .. 27} \
   CONFIG.PCW_ENET0_GRP_MDIO_ENABLE {1} \
   CONFIG.PCW_ENET0_GRP_MDIO_IO {MIO 52 .. 53} \
   CONFIG.PCW_ENET0_HIGHADDR {0xE000BFFF} \
   CONFIG.PCW_ENET0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR0 {8} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET0_RESET_ENABLE {0} \
   CONFIG.PCW_ENET1_BASEADDR {0xE000C000} \
   CONFIG.PCW_ENET1_GRP_MDIO_ENABLE {0} \
   CONFIG.PCW_ENET1_HIGHADDR {0xE000CFFF} \
   CONFIG.PCW_ENET1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_ENET1_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET1_RESET_ENABLE {0} \
   CONFIG.PCW_ENET_RESET_ENABLE {1} \
   CONFIG.PCW_ENET_RESET_POLARITY {Active Low} \
   CONFIG.PCW_ENET_RESET_SELECT {Share reset pin} \
   CONFIG.PCW_EN_4K_TIMER {0} \
   CONFIG.PCW_EN_CAN0 {0} \
   CONFIG.PCW_EN_CAN1 {0} \
   CONFIG.PCW_EN_CLK0_PORT {1} \
   CONFIG.PCW_EN_CLK1_PORT {0} \
   CONFIG.PCW_EN_CLK2_PORT {0} \
   CONFIG.PCW_EN_CLK3_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG0_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG1_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG2_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG3_PORT {0} \
   CONFIG.PCW_EN_DDR {1} \
   CONFIG.PCW_EN_EMIO_CAN0 {0} \
   CONFIG.PCW_EN_EMIO_CAN1 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_ENET0 {0} \
   CONFIG.PCW_EN_EMIO_ENET1 {0} \
   CONFIG.PCW_EN_EMIO_GPIO {0} \
   CONFIG.PCW_EN_EMIO_I2C0 {0} \
   CONFIG.PCW_EN_EMIO_I2C1 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART0 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART1 {0} \
   CONFIG.PCW_EN_EMIO_PJTAG {0} \
   CONFIG.PCW_EN_EMIO_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_SPI0 {0} \
   CONFIG.PCW_EN_EMIO_SPI1 {0} \
   CONFIG.PCW_EN_EMIO_SRAM_INT {0} \
   CONFIG.PCW_EN_EMIO_TRACE {0} \
   CONFIG.PCW_EN_EMIO_TTC0 {0} \
   CONFIG.PCW_EN_EMIO_TTC1 {0} \
   CONFIG.PCW_EN_EMIO_UART0 {0} \
   CONFIG.PCW_EN_EMIO_UART1 {0} \
   CONFIG.PCW_EN_EMIO_WDT {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO1 {0} \
   CONFIG.PCW_EN_ENET0 {1} \
   CONFIG.PCW_EN_ENET1 {0} \
   CONFIG.PCW_EN_GPIO {1} \
   CONFIG.PCW_EN_I2C0 {1} \
   CONFIG.PCW_EN_I2C1 {0} \
   CONFIG.PCW_EN_MODEM_UART0 {0} \
   CONFIG.PCW_EN_MODEM_UART1 {0} \
   CONFIG.PCW_EN_PJTAG {0} \
   CONFIG.PCW_EN_PTP_ENET0 {0} \
   CONFIG.PCW_EN_PTP_ENET1 {0} \
   CONFIG.PCW_EN_QSPI {1} \
   CONFIG.PCW_EN_RST0_PORT {1} \
   CONFIG.PCW_EN_RST1_PORT {0} \
   CONFIG.PCW_EN_RST2_PORT {0} \
   CONFIG.PCW_EN_RST3_PORT {0} \
   CONFIG.PCW_EN_SDIO0 {1} \
   CONFIG.PCW_EN_SDIO1 {0} \
   CONFIG.PCW_EN_SMC {0} \
   CONFIG.PCW_EN_SPI0 {0} \
   CONFIG.PCW_EN_SPI1 {1} \
   CONFIG.PCW_EN_TRACE {0} \
   CONFIG.PCW_EN_TTC0 {0} \
   CONFIG.PCW_EN_TTC1 {0} \
   CONFIG.PCW_EN_UART0 {1} \
   CONFIG.PCW_EN_UART1 {1} \
   CONFIG.PCW_EN_USB0 {1} \
   CONFIG.PCW_EN_USB1 {0} \
   CONFIG.PCW_EN_WDT {0} \
   CONFIG.PCW_FCLK0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR0 {7} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK_CLK0_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK1_BUF {FALSE} \
   CONFIG.PCW_FCLK_CLK2_BUF {FALSE} \
   CONFIG.PCW_FCLK_CLK3_BUF {FALSE} \
   CONFIG.PCW_FPGA0_PERIPHERAL_FREQMHZ {143} \
   CONFIG.PCW_FPGA1_PERIPHERAL_FREQMHZ {250} \
   CONFIG.PCW_FPGA2_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_FPGA3_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK1_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK2_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK3_ENABLE {0} \
   CONFIG.PCW_FTM_CTI_IN0 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN1 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN2 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN3 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT0 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT1 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT2 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT3 {<Select>} \
   CONFIG.PCW_GP0_EN_MODIFIABLE_TXN {0} \
   CONFIG.PCW_GP0_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP0_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GP1_EN_MODIFIABLE_TXN {0} \
   CONFIG.PCW_GP1_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP1_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GPIO_BASEADDR {0xE000A000} \
   CONFIG.PCW_GPIO_EMIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_EMIO_GPIO_IO {<Select>} \
   CONFIG.PCW_GPIO_EMIO_GPIO_WIDTH {64} \
   CONFIG.PCW_GPIO_HIGHADDR {0xE000AFFF} \
   CONFIG.PCW_GPIO_MIO_GPIO_ENABLE {1} \
   CONFIG.PCW_GPIO_MIO_GPIO_IO {MIO} \
   CONFIG.PCW_GPIO_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_I2C0_BASEADDR {0xE0004000} \
   CONFIG.PCW_I2C0_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C0_HIGHADDR {0xE0004FFF} \
   CONFIG.PCW_I2C0_I2C0_IO {MIO 50 .. 51} \
   CONFIG.PCW_I2C0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_I2C0_RESET_ENABLE {0} \
   CONFIG.PCW_I2C1_BASEADDR {0xE0005000} \
   CONFIG.PCW_I2C1_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C1_HIGHADDR {0xE0005FFF} \
   CONFIG.PCW_I2C1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C1_RESET_ENABLE {0} \
   CONFIG.PCW_I2C_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_I2C_RESET_ENABLE {1} \
   CONFIG.PCW_I2C_RESET_POLARITY {Active Low} \
   CONFIG.PCW_I2C_RESET_SELECT {Share reset pin} \
   CONFIG.PCW_IMPORT_BOARD_PRESET {cfg/red_pitaya.xml} \
   CONFIG.PCW_INCLUDE_ACP_TRANS_CHECK {0} \
   CONFIG.PCW_INCLUDE_TRACE_BUFFER {0} \
   CONFIG.PCW_IOPLL_CTRL_FBDIV {30} \
   CONFIG.PCW_IO_IO_PLL_FREQMHZ {1000.000} \
   CONFIG.PCW_IRQ_F2P_INTR {0} \
   CONFIG.PCW_IRQ_F2P_MODE {DIRECT} \
   CONFIG.PCW_MIO_0_DIRECTION {inout} \
   CONFIG.PCW_MIO_0_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_0_PULLUP {disabled} \
   CONFIG.PCW_MIO_0_SLEW {slow} \
   CONFIG.PCW_MIO_10_DIRECTION {inout} \
   CONFIG.PCW_MIO_10_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_10_PULLUP {enabled} \
   CONFIG.PCW_MIO_10_SLEW {slow} \
   CONFIG.PCW_MIO_11_DIRECTION {inout} \
   CONFIG.PCW_MIO_11_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_11_PULLUP {enabled} \
   CONFIG.PCW_MIO_11_SLEW {slow} \
   CONFIG.PCW_MIO_12_DIRECTION {inout} \
   CONFIG.PCW_MIO_12_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_12_PULLUP {enabled} \
   CONFIG.PCW_MIO_12_SLEW {slow} \
   CONFIG.PCW_MIO_13_DIRECTION {inout} \
   CONFIG.PCW_MIO_13_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_13_PULLUP {enabled} \
   CONFIG.PCW_MIO_13_SLEW {slow} \
   CONFIG.PCW_MIO_14_DIRECTION {in} \
   CONFIG.PCW_MIO_14_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_14_PULLUP {enabled} \
   CONFIG.PCW_MIO_14_SLEW {slow} \
   CONFIG.PCW_MIO_15_DIRECTION {out} \
   CONFIG.PCW_MIO_15_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_15_PULLUP {enabled} \
   CONFIG.PCW_MIO_15_SLEW {slow} \
   CONFIG.PCW_MIO_16_DIRECTION {out} \
   CONFIG.PCW_MIO_16_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_16_PULLUP {disabled} \
   CONFIG.PCW_MIO_16_SLEW {fast} \
   CONFIG.PCW_MIO_17_DIRECTION {out} \
   CONFIG.PCW_MIO_17_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_17_PULLUP {disabled} \
   CONFIG.PCW_MIO_17_SLEW {fast} \
   CONFIG.PCW_MIO_18_DIRECTION {out} \
   CONFIG.PCW_MIO_18_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_18_PULLUP {disabled} \
   CONFIG.PCW_MIO_18_SLEW {fast} \
   CONFIG.PCW_MIO_19_DIRECTION {out} \
   CONFIG.PCW_MIO_19_IOTYPE {out} \
   CONFIG.PCW_MIO_19_PULLUP {disabled} \
   CONFIG.PCW_MIO_19_SLEW {fast} \
   CONFIG.PCW_MIO_1_DIRECTION {out} \
   CONFIG.PCW_MIO_1_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_1_PULLUP {enabled} \
   CONFIG.PCW_MIO_1_SLEW {slow} \
   CONFIG.PCW_MIO_20_DIRECTION {out} \
   CONFIG.PCW_MIO_20_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_20_PULLUP {disabled} \
   CONFIG.PCW_MIO_20_SLEW {fast} \
   CONFIG.PCW_MIO_21_DIRECTION {out} \
   CONFIG.PCW_MIO_21_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_21_PULLUP {disabled} \
   CONFIG.PCW_MIO_21_SLEW {fast} \
   CONFIG.PCW_MIO_22_DIRECTION {in} \
   CONFIG.PCW_MIO_22_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_22_PULLUP {disabled} \
   CONFIG.PCW_MIO_22_SLEW {fast} \
   CONFIG.PCW_MIO_23_DIRECTION {in} \
   CONFIG.PCW_MIO_23_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_23_PULLUP {disabled} \
   CONFIG.PCW_MIO_23_SLEW {fast} \
   CONFIG.PCW_MIO_24_DIRECTION {in} \
   CONFIG.PCW_MIO_24_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_24_PULLUP {disabled} \
   CONFIG.PCW_MIO_24_SLEW {fast} \
   CONFIG.PCW_MIO_25_DIRECTION {in} \
   CONFIG.PCW_MIO_25_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_25_PULLUP {disabled} \
   CONFIG.PCW_MIO_25_SLEW {fast} \
   CONFIG.PCW_MIO_26_DIRECTION {in} \
   CONFIG.PCW_MIO_26_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_26_PULLUP {disabled} \
   CONFIG.PCW_MIO_26_SLEW {fast} \
   CONFIG.PCW_MIO_27_DIRECTION {in} \
   CONFIG.PCW_MIO_27_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_27_PULLUP {disabled} \
   CONFIG.PCW_MIO_27_SLEW {fast} \
   CONFIG.PCW_MIO_28_DIRECTION {inout} \
   CONFIG.PCW_MIO_28_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_28_PULLUP {enabled} \
   CONFIG.PCW_MIO_28_SLEW {fast} \
   CONFIG.PCW_MIO_29_DIRECTION {in} \
   CONFIG.PCW_MIO_29_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_29_PULLUP {enabled} \
   CONFIG.PCW_MIO_29_SLEW {fast} \
   CONFIG.PCW_MIO_2_DIRECTION {inout} \
   CONFIG.PCW_MIO_2_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_2_PULLUP {disabled} \
   CONFIG.PCW_MIO_2_SLEW {slow} \
   CONFIG.PCW_MIO_30_DIRECTION {out} \
   CONFIG.PCW_MIO_30_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_30_PULLUP {enabled} \
   CONFIG.PCW_MIO_30_SLEW {fast} \
   CONFIG.PCW_MIO_31_DIRECTION {in} \
   CONFIG.PCW_MIO_31_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_31_PULLUP {enabled} \
   CONFIG.PCW_MIO_31_SLEW {fast} \
   CONFIG.PCW_MIO_32_DIRECTION {inout} \
   CONFIG.PCW_MIO_32_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_32_PULLUP {enabled} \
   CONFIG.PCW_MIO_32_SLEW {fast} \
   CONFIG.PCW_MIO_33_DIRECTION {inout} \
   CONFIG.PCW_MIO_33_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_33_PULLUP {enabled} \
   CONFIG.PCW_MIO_33_SLEW {fast} \
   CONFIG.PCW_MIO_34_DIRECTION {inout} \
   CONFIG.PCW_MIO_34_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_34_PULLUP {enabled} \
   CONFIG.PCW_MIO_34_SLEW {fast} \
   CONFIG.PCW_MIO_35_DIRECTION {inout} \
   CONFIG.PCW_MIO_35_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_35_PULLUP {enabled} \
   CONFIG.PCW_MIO_35_SLEW {fast} \
   CONFIG.PCW_MIO_36_DIRECTION {in} \
   CONFIG.PCW_MIO_36_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_36_PULLUP {enabled} \
   CONFIG.PCW_MIO_36_SLEW {fast} \
   CONFIG.PCW_MIO_37_DIRECTION {inout} \
   CONFIG.PCW_MIO_37_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_37_PULLUP {enabled} \
   CONFIG.PCW_MIO_37_SLEW {fast} \
   CONFIG.PCW_MIO_38_DIRECTION {inout} \
   CONFIG.PCW_MIO_38_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_38_PULLUP {enabled} \
   CONFIG.PCW_MIO_38_SLEW {fast} \
   CONFIG.PCW_MIO_39_DIRECTION {inout} \
   CONFIG.PCW_MIO_39_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_39_PULLUP {enabled} \
   CONFIG.PCW_MIO_39_SLEW {fast} \
   CONFIG.PCW_MIO_3_DIRECTION {inout} \
   CONFIG.PCW_MIO_3_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_3_PULLUP {disabled} \
   CONFIG.PCW_MIO_3_SLEW {slow} \
   CONFIG.PCW_MIO_40_DIRECTION {inout} \
   CONFIG.PCW_MIO_40_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_40_PULLUP {enabled} \
   CONFIG.PCW_MIO_40_SLEW {slow} \
   CONFIG.PCW_MIO_41_DIRECTION {inout} \
   CONFIG.PCW_MIO_41_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_41_PULLUP {enabled} \
   CONFIG.PCW_MIO_41_SLEW {slow} \
   CONFIG.PCW_MIO_42_DIRECTION {inout} \
   CONFIG.PCW_MIO_42_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_42_PULLUP {enabled} \
   CONFIG.PCW_MIO_42_SLEW {slow} \
   CONFIG.PCW_MIO_43_DIRECTION {inout} \
   CONFIG.PCW_MIO_43_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_43_PULLUP {enabled} \
   CONFIG.PCW_MIO_43_SLEW {slow} \
   CONFIG.PCW_MIO_44_DIRECTION {inout} \
   CONFIG.PCW_MIO_44_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_44_PULLUP {enabled} \
   CONFIG.PCW_MIO_44_SLEW {slow} \
   CONFIG.PCW_MIO_45_DIRECTION {inout} \
   CONFIG.PCW_MIO_45_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_45_PULLUP {enabled} \
   CONFIG.PCW_MIO_45_SLEW {slow} \
   CONFIG.PCW_MIO_46_DIRECTION {in} \
   CONFIG.PCW_MIO_46_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_46_PULLUP {enabled} \
   CONFIG.PCW_MIO_46_SLEW {slow} \
   CONFIG.PCW_MIO_47_DIRECTION {in} \
   CONFIG.PCW_MIO_47_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_47_PULLUP {enabled} \
   CONFIG.PCW_MIO_47_SLEW {slow} \
   CONFIG.PCW_MIO_48_DIRECTION {out} \
   CONFIG.PCW_MIO_48_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_48_PULLUP {enabled} \
   CONFIG.PCW_MIO_48_SLEW {slow} \
   CONFIG.PCW_MIO_49_DIRECTION {inout} \
   CONFIG.PCW_MIO_49_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_49_PULLUP {enabled} \
   CONFIG.PCW_MIO_49_SLEW {slow} \
   CONFIG.PCW_MIO_4_DIRECTION {inout} \
   CONFIG.PCW_MIO_4_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_4_PULLUP {disabled} \
   CONFIG.PCW_MIO_4_SLEW {slow} \
   CONFIG.PCW_MIO_50_DIRECTION {inout} \
   CONFIG.PCW_MIO_50_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_50_PULLUP {enabled} \
   CONFIG.PCW_MIO_50_SLEW {slow} \
   CONFIG.PCW_MIO_51_DIRECTION {inout} \
   CONFIG.PCW_MIO_51_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_51_PULLUP {enabled} \
   CONFIG.PCW_MIO_51_SLEW {slow} \
   CONFIG.PCW_MIO_52_DIRECTION {out} \
   CONFIG.PCW_MIO_52_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_52_PULLUP {enabled} \
   CONFIG.PCW_MIO_52_SLEW {slow} \
   CONFIG.PCW_MIO_53_DIRECTION {inout} \
   CONFIG.PCW_MIO_53_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_53_PULLUP {enabled} \
   CONFIG.PCW_MIO_53_SLEW {slow} \
   CONFIG.PCW_MIO_5_DIRECTION {inout} \
   CONFIG.PCW_MIO_5_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_5_PULLUP {disabled} \
   CONFIG.PCW_MIO_5_SLEW {slow} \
   CONFIG.PCW_MIO_6_DIRECTION {out} \
   CONFIG.PCW_MIO_6_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_6_PULLUP {disabled} \
   CONFIG.PCW_MIO_6_SLEW {slow} \
   CONFIG.PCW_MIO_7_DIRECTION {out} \
   CONFIG.PCW_MIO_7_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_7_PULLUP {disabled} \
   CONFIG.PCW_MIO_7_SLEW {slow} \
   CONFIG.PCW_MIO_8_DIRECTION {out} \
   CONFIG.PCW_MIO_8_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_8_PULLUP {disabled} \
   CONFIG.PCW_MIO_8_SLEW {slow} \
   CONFIG.PCW_MIO_9_DIRECTION {in} \
   CONFIG.PCW_MIO_9_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_9_PULLUP {enabled} \
   CONFIG.PCW_MIO_9_SLEW {slow} \
   CONFIG.PCW_MIO_PRIMITIVE {54} \
   CONFIG.PCW_MIO_TREE_PERIPHERALS { \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#I2C 0#Enet \
     0#SD 0#SD \
     0#SD 0#SD \
     0#SD 0#SD \
     0#SD 0#SD \
     0#USB Reset#GPIO#I2C \
     0#USB Reset#GPIO#I2C \
     0#USB Reset#GPIO#I2C \
     0#USB Reset#GPIO#I2C \
     0#USB Reset#GPIO#I2C \
     0#USB Reset#GPIO#I2C \
     0#USB Reset#GPIO#I2C \
     1#SPI 1#SPI \
     1#SPI 1#SPI \
     1#UART 0#UART \
     Flash#GPIO#UART 1#UART \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     GPIO#Quad SPI \
   } \
   CONFIG.PCW_MIO_TREE_SIGNALS {gpio[0]#qspi0_ss_b#qspi0_io[0]#qspi0_io[1]#qspi0_io[2]#qspi0_io[3]/HOLD_B#qspi0_sclk#gpio[7]#tx#rx#mosi#miso#sclk#ss[0]#rx#tx#tx_clk#txd[0]#txd[1]#txd[2]#txd[3]#tx_ctl#rx_clk#rxd[0]#rxd[1]#rxd[2]#rxd[3]#rx_ctl#data[4]#dir#stp#nxt#data[0]#data[1]#data[2]#data[3]#clk#data[5]#data[6]#data[7]#clk#cmd#data[0]#data[1]#data[2]#data[3]#cd#wp#reset#gpio[49]#scl#sda#mdc#mdio} \
   CONFIG.PCW_M_AXI_GP0_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP0_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP0_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP0_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP1_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP1_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_NAND_CYCLES_T_AR {1} \
   CONFIG.PCW_NAND_CYCLES_T_CLR {1} \
   CONFIG.PCW_NAND_CYCLES_T_RC {11} \
   CONFIG.PCW_NAND_CYCLES_T_REA {1} \
   CONFIG.PCW_NAND_CYCLES_T_RR {1} \
   CONFIG.PCW_NAND_CYCLES_T_WC {11} \
   CONFIG.PCW_NAND_CYCLES_T_WP {1} \
   CONFIG.PCW_NAND_GRP_D8_ENABLE {0} \
   CONFIG.PCW_NAND_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_CS0_T_PC {1} \
   CONFIG.PCW_NOR_CS0_T_RC {11} \
   CONFIG.PCW_NOR_CS0_T_TR {1} \
   CONFIG.PCW_NOR_CS0_T_WC {11} \
   CONFIG.PCW_NOR_CS0_T_WP {1} \
   CONFIG.PCW_NOR_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_CS1_T_PC {1} \
   CONFIG.PCW_NOR_CS1_T_RC {11} \
   CONFIG.PCW_NOR_CS1_T_TR {1} \
   CONFIG.PCW_NOR_CS1_T_WC {11} \
   CONFIG.PCW_NOR_CS1_T_WP {1} \
   CONFIG.PCW_NOR_CS1_WE_TIME {0} \
   CONFIG.PCW_NOR_GRP_A25_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_INT_ENABLE {0} \
   CONFIG.PCW_NOR_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_SRAM_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_SRAM_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS1_WE_TIME {0} \
   CONFIG.PCW_OVERRIDE_BASIC_CLOCK {0} \
   CONFIG.PCW_P2F_CAN0_INTR {0} \
   CONFIG.PCW_P2F_CAN1_INTR {0} \
   CONFIG.PCW_P2F_CTI_INTR {0} \
   CONFIG.PCW_P2F_DMAC0_INTR {0} \
   CONFIG.PCW_P2F_DMAC1_INTR {0} \
   CONFIG.PCW_P2F_DMAC2_INTR {0} \
   CONFIG.PCW_P2F_DMAC3_INTR {0} \
   CONFIG.PCW_P2F_DMAC4_INTR {0} \
   CONFIG.PCW_P2F_DMAC5_INTR {0} \
   CONFIG.PCW_P2F_DMAC6_INTR {0} \
   CONFIG.PCW_P2F_DMAC7_INTR {0} \
   CONFIG.PCW_P2F_DMAC_ABORT_INTR {0} \
   CONFIG.PCW_P2F_ENET0_INTR {0} \
   CONFIG.PCW_P2F_ENET1_INTR {0} \
   CONFIG.PCW_P2F_GPIO_INTR {0} \
   CONFIG.PCW_P2F_I2C0_INTR {0} \
   CONFIG.PCW_P2F_I2C1_INTR {0} \
   CONFIG.PCW_P2F_QSPI_INTR {0} \
   CONFIG.PCW_P2F_SDIO0_INTR {0} \
   CONFIG.PCW_P2F_SDIO1_INTR {0} \
   CONFIG.PCW_P2F_SMC_INTR {0} \
   CONFIG.PCW_P2F_SPI0_INTR {0} \
   CONFIG.PCW_P2F_SPI1_INTR {0} \
   CONFIG.PCW_P2F_UART0_INTR {0} \
   CONFIG.PCW_P2F_UART1_INTR {0} \
   CONFIG.PCW_P2F_USB0_INTR {0} \
   CONFIG.PCW_P2F_USB1_INTR {0} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY0 {0.080} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY1 {0.063} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY2 {0.057} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY3 {0.068} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_0 {-0.047} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_1 {-0.025} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_2 {-0.006} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_3 {-0.017} \
   CONFIG.PCW_PACKAGE_NAME {clg400} \
   CONFIG.PCW_PCAP_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_PCAP_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_PCAP_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_PERIPHERAL_BOARD_PRESET {None} \
   CONFIG.PCW_PJTAG_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_PLL_BYPASSMODE_ENABLE {0} \
   CONFIG.PCW_PRESET_BANK0_VOLTAGE {LVCMOS 3.3V} \
   CONFIG.PCW_PRESET_BANK1_VOLTAGE {LVCMOS 2.5V} \
   CONFIG.PCW_PS7_SI_REV {PRODUCTION} \
   CONFIG.PCW_QSPI_GRP_FBCLK_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_IO1_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_ENABLE {1} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_IO {MIO 1 .. 6} \
   CONFIG.PCW_QSPI_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_QSPI_INTERNAL_HIGHADDRESS {0xFCFFFFFF} \
   CONFIG.PCW_QSPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_QSPI_PERIPHERAL_DIVISOR0 {8} \
   CONFIG.PCW_QSPI_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_QSPI_PERIPHERAL_FREQMHZ {125} \
   CONFIG.PCW_QSPI_QSPI_IO {MIO 1 .. 6} \
   CONFIG.PCW_SD0_GRP_CD_ENABLE {1} \
   CONFIG.PCW_SD0_GRP_CD_IO {MIO 46} \
   CONFIG.PCW_SD0_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_WP_ENABLE {1} \
   CONFIG.PCW_SD0_GRP_WP_IO {MIO 47} \
   CONFIG.PCW_SD0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SD0_SD0_IO {MIO 40 .. 45} \
   CONFIG.PCW_SD1_GRP_CD_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SDIO0_BASEADDR {0xE0100000} \
   CONFIG.PCW_SDIO0_HIGHADDR {0xE0100FFF} \
   CONFIG.PCW_SDIO1_BASEADDR {0xE0101000} \
   CONFIG.PCW_SDIO1_HIGHADDR {0xE0101FFF} \
   CONFIG.PCW_SDIO_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SDIO_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_SDIO_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SDIO_PERIPHERAL_VALID {1} \
   CONFIG.PCW_SINGLE_QSPI_DATA_MODE {x4} \
   CONFIG.PCW_SMC_CYCLE_T0 {NA} \
   CONFIG.PCW_SMC_CYCLE_T1 {NA} \
   CONFIG.PCW_SMC_CYCLE_T2 {NA} \
   CONFIG.PCW_SMC_CYCLE_T3 {NA} \
   CONFIG.PCW_SMC_CYCLE_T4 {NA} \
   CONFIG.PCW_SMC_CYCLE_T5 {NA} \
   CONFIG.PCW_SMC_CYCLE_T6 {NA} \
   CONFIG.PCW_SMC_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SMC_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SMC_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SMC_PERIPHERAL_VALID {0} \
   CONFIG.PCW_SPI0_BASEADDR {0xE0006000} \
   CONFIG.PCW_SPI0_GRP_SS0_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS0_IO {<Select>} \
   CONFIG.PCW_SPI0_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS1_IO {<Select>} \
   CONFIG.PCW_SPI0_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS2_IO {<Select>} \
   CONFIG.PCW_SPI0_HIGHADDR {0xE0006FFF} \
   CONFIG.PCW_SPI0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SPI0_SPI0_IO {<Select>} \
   CONFIG.PCW_SPI1_BASEADDR {0xE0007000} \
   CONFIG.PCW_SPI1_GRP_SS0_ENABLE {1} \
   CONFIG.PCW_SPI1_GRP_SS0_IO {MIO 13} \
   CONFIG.PCW_SPI1_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI1_HIGHADDR {0xE0007FFF} \
   CONFIG.PCW_SPI1_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SPI1_SPI1_IO {MIO 10 .. 15} \
   CONFIG.PCW_SPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SPI_PERIPHERAL_DIVISOR0 {6} \
   CONFIG.PCW_SPI_PERIPHERAL_FREQMHZ {166.666666} \
   CONFIG.PCW_SPI_PERIPHERAL_VALID {1} \
   CONFIG.PCW_S_AXI_ACP_ARUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_AWUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_ID_WIDTH {3} \
   CONFIG.PCW_S_AXI_GP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_GP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP0_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP1_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP2_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP2_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP3_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP3_ID_WIDTH {6} \
   CONFIG.PCW_TPIU_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_TPIU_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TPIU_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_TRACE_BUFFER_CLOCK_DELAY {12} \
   CONFIG.PCW_TRACE_BUFFER_FIFO_SIZE {128} \
   CONFIG.PCW_TRACE_GRP_16BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_2BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_32BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_4BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_8BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_INTERNAL_WIDTH {2} \
   CONFIG.PCW_TRACE_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TRACE_PIPELINE_WIDTH {8} \
   CONFIG.PCW_TTC0_BASEADDR {0xE0104000} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_HIGHADDR {0xE0104fff} \
   CONFIG.PCW_TTC0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC0_TTC0_IO {<Select>} \
   CONFIG.PCW_TTC1_BASEADDR {0xE0105000} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_HIGHADDR {0xE0105fff} \
   CONFIG.PCW_TTC1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_UART0_BASEADDR {0xE0000000} \
   CONFIG.PCW_UART0_BAUD_RATE {115200} \
   CONFIG.PCW_UART0_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART0_HIGHADDR {0xE0000FFF} \
   CONFIG.PCW_UART0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART0_UART0_IO {MIO 14 .. 15} \
   CONFIG.PCW_UART1_BASEADDR {0xE0001000} \
   CONFIG.PCW_UART1_BAUD_RATE {115200} \
   CONFIG.PCW_UART1_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART1_HIGHADDR {0xE0001FFF} \
   CONFIG.PCW_UART1_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART1_UART1_IO {MIO 8 .. 9} \
   CONFIG.PCW_UART_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_UART_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_UART_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_UART_PERIPHERAL_VALID {1} \
   CONFIG.PCW_UIPARAM_ACT_DDR_FREQ_MHZ {533.333374} \
   CONFIG.PCW_UIPARAM_DDR_ADV_ENABLE {0} \
   CONFIG.PCW_UIPARAM_DDR_AL {0} \
   CONFIG.PCW_UIPARAM_DDR_BANK_ADDR_COUNT {3} \
   CONFIG.PCW_UIPARAM_DDR_BL {8} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY0 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY1 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY2 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY3 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BUS_WIDTH {16 Bit} \
   CONFIG.PCW_UIPARAM_DDR_CL {7} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_STOP_EN {0} \
   CONFIG.PCW_UIPARAM_DDR_COL_ADDR_COUNT {10} \
   CONFIG.PCW_UIPARAM_DDR_CWL {6} \
   CONFIG.PCW_UIPARAM_DDR_DEVICE_CAPACITY {4096 MBits} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PACKAGE_LENGTH {101.239} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PACKAGE_LENGTH {79.5025} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PACKAGE_LENGTH {60.536} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PACKAGE_LENGTH {71.7715} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_0 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_1 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PACKAGE_LENGTH {104.5365} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PACKAGE_LENGTH {70.676} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PACKAGE_LENGTH {59.1615} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PACKAGE_LENGTH {81.319} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DRAM_WIDTH {16 Bits} \
   CONFIG.PCW_UIPARAM_DDR_ECC {Disabled} \
   CONFIG.PCW_UIPARAM_DDR_ENABLE {1} \
   CONFIG.PCW_UIPARAM_DDR_FREQ_MHZ {534} \
   CONFIG.PCW_UIPARAM_DDR_HIGH_TEMP {Normal (0-85)} \
   CONFIG.PCW_UIPARAM_DDR_MEMORY_TYPE {DDR 3} \
   CONFIG.PCW_UIPARAM_DDR_PARTNO {MT41J256M16 RE-125} \
   CONFIG.PCW_UIPARAM_DDR_ROW_ADDR_COUNT {15} \
   CONFIG.PCW_UIPARAM_DDR_SPEED_BIN {DDR3_1066F} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_DATA_EYE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_READ_GATE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_WRITE_LEVEL {1} \
   CONFIG.PCW_UIPARAM_DDR_T_FAW {40.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RAS_MIN {35.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RC {48.91} \
   CONFIG.PCW_UIPARAM_DDR_T_RCD {7} \
   CONFIG.PCW_UIPARAM_DDR_T_RP {7} \
   CONFIG.PCW_UIPARAM_DDR_USE_INTERNAL_VREF {0} \
   CONFIG.PCW_UIPARAM_GENERATE_SUMMARY {NA} \
   CONFIG.PCW_USB0_BASEADDR {0xE0102000} \
   CONFIG.PCW_USB0_HIGHADDR {0xE0102fff} \
   CONFIG.PCW_USB0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB0_RESET_ENABLE {1} \
   CONFIG.PCW_USB0_RESET_IO {MIO 48} \
   CONFIG.PCW_USB0_USB0_IO {MIO 28 .. 39} \
   CONFIG.PCW_USB1_BASEADDR {0xE0103000} \
   CONFIG.PCW_USB1_HIGHADDR {0xE0103fff} \
   CONFIG.PCW_USB1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB1_RESET_ENABLE {0} \
   CONFIG.PCW_USB_RESET_ENABLE {1} \
   CONFIG.PCW_USB_RESET_POLARITY {Active Low} \
   CONFIG.PCW_USB_RESET_SELECT {Share reset pin} \
   CONFIG.PCW_USE_AXI_FABRIC_IDLE {0} \
   CONFIG.PCW_USE_AXI_NONSECURE {0} \
   CONFIG.PCW_USE_CORESIGHT {0} \
   CONFIG.PCW_USE_CROSS_TRIGGER {0} \
   CONFIG.PCW_USE_CR_FABRIC {1} \
   CONFIG.PCW_USE_DDR_BYPASS {0} \
   CONFIG.PCW_USE_DEBUG {0} \
   CONFIG.PCW_USE_DEFAULT_ACP_USER_VAL {0} \
   CONFIG.PCW_USE_DMA0 {0} \
   CONFIG.PCW_USE_DMA1 {0} \
   CONFIG.PCW_USE_DMA2 {0} \
   CONFIG.PCW_USE_DMA3 {0} \
   CONFIG.PCW_USE_EXPANDED_IOP {0} \
   CONFIG.PCW_USE_EXPANDED_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_FABRIC_INTERRUPT {0} \
   CONFIG.PCW_USE_HIGH_OCM {0} \
   CONFIG.PCW_USE_M_AXI_GP0 {1} \
   CONFIG.PCW_USE_M_AXI_GP1 {0} \
   CONFIG.PCW_USE_PROC_EVENT_BUS {0} \
   CONFIG.PCW_USE_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_S_AXI_ACP {0} \
   CONFIG.PCW_USE_S_AXI_GP0 {0} \
   CONFIG.PCW_USE_S_AXI_GP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP0 {0} \
   CONFIG.PCW_USE_S_AXI_HP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP2 {0} \
   CONFIG.PCW_USE_S_AXI_HP3 {0} \
   CONFIG.PCW_USE_TRACE {0} \
   CONFIG.PCW_USE_TRACE_DATA_EDGE_DETECTOR {0} \
   CONFIG.PCW_VALUE_SILVERSION {3} \
   CONFIG.PCW_WDT_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_WDT_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_WDT_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_WDT_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.preset {None} \
 ] $ps_0

  # Create instance: ps_0_axi_periph, and set properties
  set ps_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 ps_0_axi_periph ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
   CONFIG.SYNCHRONIZATION_STAGES {2} \
 ] $ps_0_axi_periph

  # Create instance: rst_0, and set properties
  set rst_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_0 ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net ps_0_DDR [get_bd_intf_pins DDR] [get_bd_intf_pins ps_0/DDR]
  connect_bd_intf_net -intf_net ps_0_FIXED_IO [get_bd_intf_pins FIXED_IO] [get_bd_intf_pins ps_0/FIXED_IO]
  connect_bd_intf_net -intf_net ps_0_M_AXI_GP0 [get_bd_intf_pins ps_0/M_AXI_GP0] [get_bd_intf_pins ps_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net ps_0_axi_periph_M00_AXI [get_bd_intf_pins M00_AXI] [get_bd_intf_pins ps_0_axi_periph/M00_AXI]
  connect_bd_intf_net -intf_net ps_0_axi_periph_M01_AXI [get_bd_intf_pins M01_AXI] [get_bd_intf_pins ps_0_axi_periph/M01_AXI]
  connect_bd_intf_net -intf_net ps_0_axi_periph_M02_AXI [get_bd_intf_pins M02_AXI] [get_bd_intf_pins ps_0_axi_periph/M02_AXI]
  connect_bd_intf_net -intf_net ps_0_axi_periph_M03_AXI [get_bd_intf_pins M03_AXI] [get_bd_intf_pins ps_0_axi_periph/M03_AXI]

  # Create port connections
  connect_bd_net -net dcm_locked_1 [get_bd_pins dcm_locked] [get_bd_pins rst_0/dcm_locked]
  connect_bd_net -net ps_0_FCLK_CLK0 [get_bd_pins aclk] [get_bd_pins ps_0/M_AXI_GP0_ACLK] [get_bd_pins ps_0_axi_periph/ACLK] [get_bd_pins ps_0_axi_periph/M00_ACLK] [get_bd_pins ps_0_axi_periph/M01_ACLK] [get_bd_pins ps_0_axi_periph/M02_ACLK] [get_bd_pins ps_0_axi_periph/M03_ACLK] [get_bd_pins ps_0_axi_periph/S00_ACLK] [get_bd_pins rst_0/slowest_sync_clk]
  connect_bd_net -net rst_0_interconnect_aresetn [get_bd_pins ps_0_axi_periph/ARESETN] [get_bd_pins rst_0/interconnect_aresetn]
  connect_bd_net -net rst_0_peripheral_aresetn [get_bd_pins peripheral_aresetn] [get_bd_pins ps_0_axi_periph/M00_ARESETN] [get_bd_pins ps_0_axi_periph/M01_ARESETN] [get_bd_pins ps_0_axi_periph/M02_ARESETN] [get_bd_pins ps_0_axi_periph/M03_ARESETN] [get_bd_pins ps_0_axi_periph/S00_ARESETN] [get_bd_pins rst_0/peripheral_aresetn]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins rst_0/ext_reset_in] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: DAC
proc create_hier_cell_DAC { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_DAC() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DAC0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_DAC1


  # Create pins
  create_bd_pin -dir I -type clk clk125
  create_bd_pin -dir O -type clk dac_clk
  create_bd_pin -dir O -from 13 -to 0 dac_dat
  create_bd_pin -dir O -type rst dac_rst
  create_bd_pin -dir O dac_sel
  create_bd_pin -dir O dac_wrt
  create_bd_pin -dir I -type clk ddr_clk
  create_bd_pin -dir I locked
  create_bd_pin -dir I -type clk s_axis_aclk
  create_bd_pin -dir I -type rst s_axis_aresetn
  create_bd_pin -dir I -type clk wrt_clk

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property -dict [ list \
   CONFIG.TDATA_NUM_BYTES {2} \
 ] $axis_combiner_0

  # Create instance: dac_0, and set properties
  set dac_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_dac:2.0 dac_0 ]

  # Create instance: fifo_0, and set properties
  set fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 fifo_0 ]
  set_property -dict [ list \
   CONFIG.TDATA_NUM_BYTES {2} \
 ] $fifo_0

  # Create instance: fifo_1, and set properties
  set fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 fifo_1 ]
  set_property -dict [ list \
   CONFIG.TDATA_NUM_BYTES {2} \
 ] $fifo_1

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_DAC1_1 [get_bd_intf_pins S_AXIS_DAC1] [get_bd_intf_pins fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins dac_0/S_AXIS]
  connect_bd_intf_net -intf_net fifo_0_M_AXIS [get_bd_intf_pins axis_combiner_0/S00_AXIS] [get_bd_intf_pins fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_1_M_AXIS [get_bd_intf_pins axis_combiner_0/S01_AXIS] [get_bd_intf_pins fifo_1/M_AXIS]
  connect_bd_intf_net -intf_net tx_0_M_AXIS [get_bd_intf_pins S_AXIS_DAC0] [get_bd_intf_pins fifo_0/S_AXIS]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins fifo_0/m_axis_aresetn] [get_bd_pins fifo_1/m_axis_aresetn] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net adc_0_adc_clk [get_bd_pins clk125] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins dac_0/aclk] [get_bd_pins fifo_0/m_axis_aclk] [get_bd_pins fifo_1/m_axis_aclk]
  connect_bd_net -net dac_0_dac_clk [get_bd_pins dac_clk] [get_bd_pins dac_0/dac_clk]
  connect_bd_net -net dac_0_dac_dat [get_bd_pins dac_dat] [get_bd_pins dac_0/dac_dat]
  connect_bd_net -net dac_0_dac_rst [get_bd_pins dac_rst] [get_bd_pins dac_0/dac_rst]
  connect_bd_net -net dac_0_dac_sel [get_bd_pins dac_sel] [get_bd_pins dac_0/dac_sel]
  connect_bd_net -net dac_0_dac_wrt [get_bd_pins dac_wrt] [get_bd_pins dac_0/dac_wrt]
  connect_bd_net -net ddr_clk_1 [get_bd_pins ddr_clk] [get_bd_pins dac_0/ddr_clk]
  connect_bd_net -net locked_1 [get_bd_pins locked] [get_bd_pins dac_0/locked]
  connect_bd_net -net ps_0_FCLK_CLK0 [get_bd_pins s_axis_aclk] [get_bd_pins fifo_0/s_axis_aclk] [get_bd_pins fifo_1/s_axis_aclk]
  connect_bd_net -net rst_0_peripheral_aresetn [get_bd_pins s_axis_aresetn] [get_bd_pins fifo_0/s_axis_aresetn] [get_bd_pins fifo_1/s_axis_aresetn]
  connect_bd_net -net wrt_clk_1 [get_bd_pins wrt_clk] [get_bd_pins dac_0/wrt_clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ADC
proc create_hier_cell_ADC { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ADC() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_ADC0


  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir O adc_csn_o
  create_bd_pin -dir I -from 15 -to 0 adc_dat_a_i
  create_bd_pin -dir I -from 15 -to 0 adc_dat_b_i
  create_bd_pin -dir I aresetn

  # Create instance: adc_0, and set properties
  set adc_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_adc:3.0 adc_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net adc_0_M_AXIS [get_bd_intf_pins M_AXIS_ADC0] [get_bd_intf_pins adc_0/M_AXIS]

  # Create port connections
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins adc_0/aclk]
  connect_bd_net -net adc_0_adc_csn [get_bd_pins adc_csn_o] [get_bd_pins adc_0/adc_csn]
  connect_bd_net -net adc_dat_a_i_1 [get_bd_pins adc_dat_a_i] [get_bd_pins adc_0/adc_dat_a]
  connect_bd_net -net adc_dat_b_i_1 [get_bd_pins adc_dat_b_i] [get_bd_pins adc_0/adc_dat_b]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]

  set Vaux0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux0 ]

  set Vaux1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux1 ]

  set Vaux8 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux8 ]

  set Vaux9 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux9 ]

  set Vp_Vn [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vp_Vn ]


  # Create ports
  set adc_clk_n_i [ create_bd_port -dir I adc_clk_n_i ]
  set adc_clk_p_i [ create_bd_port -dir I adc_clk_p_i ]
  set adc_csn_o [ create_bd_port -dir O adc_csn_o ]
  set adc_dat_a_i [ create_bd_port -dir I -from 15 -to 0 adc_dat_a_i ]
  set adc_dat_b_i [ create_bd_port -dir I -from 15 -to 0 adc_dat_b_i ]
  set adc_enc_n_o [ create_bd_port -dir O adc_enc_n_o ]
  set adc_enc_p_o [ create_bd_port -dir O adc_enc_p_o ]
  set dac_clk_o [ create_bd_port -dir O dac_clk_o ]
  set dac_dat_o [ create_bd_port -dir O -from 13 -to 0 dac_dat_o ]
  set dac_pwm_o [ create_bd_port -dir O -from 3 -to 0 dac_pwm_o ]
  set dac_rst_o [ create_bd_port -dir O dac_rst_o ]
  set dac_sel_o [ create_bd_port -dir O dac_sel_o ]
  set dac_wrt_o [ create_bd_port -dir O dac_wrt_o ]
  set exp_n_tri_io [ create_bd_port -dir O -from 7 -to 0 -type data exp_n_tri_io ]
  set exp_p_tri_io [ create_bd_port -dir O -from 7 -to 0 -type data exp_p_tri_io ]
  set led_o [ create_bd_port -dir O -from 7 -to 0 led_o ]

  # Create instance: ADC
  create_hier_cell_ADC [current_bd_instance .] ADC

  # Create instance: DAC
  create_hier_cell_DAC [current_bd_instance .] DAC

  # Create instance: PS
  create_hier_cell_PS [current_bd_instance .] PS

  # Create instance: RxConfigReg
  create_hier_cell_RxConfigReg [current_bd_instance .] RxConfigReg

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {80.0} \
   CONFIG.CLKOUT1_DRIVES {BUFG} \
   CONFIG.CLKOUT1_JITTER {119.348} \
   CONFIG.CLKOUT1_PHASE_ERROR {96.948} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {125} \
   CONFIG.CLKOUT2_DRIVES {BUFG} \
   CONFIG.CLKOUT2_JITTER {104.759} \
   CONFIG.CLKOUT2_PHASE_ERROR {96.948} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {250} \
   CONFIG.CLKOUT2_REQUESTED_PHASE {157.5} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLKOUT3_DRIVES {BUFG} \
   CONFIG.CLKOUT3_JITTER {104.759} \
   CONFIG.CLKOUT3_PHASE_ERROR {96.948} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {250} \
   CONFIG.CLKOUT3_REQUESTED_PHASE {202.5} \
   CONFIG.CLKOUT3_USED {true} \
   CONFIG.CLKOUT4_DRIVES {BUFG} \
   CONFIG.CLKOUT5_DRIVES {BUFG} \
   CONFIG.CLKOUT6_DRIVES {BUFG} \
   CONFIG.CLKOUT7_DRIVES {BUFG} \
   CONFIG.CLK_OUT1_PORT {clk_125} \
   CONFIG.CLK_OUT2_PORT {clk_250_p1} \
   CONFIG.CLK_OUT3_PORT {clk_250_p2} \
   CONFIG.MMCM_BANDWIDTH {OPTIMIZED} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {8} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {8} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {4} \
   CONFIG.MMCM_CLKOUT1_PHASE {157.500} \
   CONFIG.MMCM_CLKOUT2_DIVIDE {4} \
   CONFIG.MMCM_CLKOUT2_PHASE {202.500} \
   CONFIG.MMCM_COMPENSATION {ZHOLD} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {3} \
   CONFIG.PLL_CLKIN_PERIOD {8.000} \
   CONFIG.PRIMITIVE {PLL} \
   CONFIG.PRIM_IN_FREQ {125} \
   CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: rx_0
  create_hier_cell_rx_0 [current_bd_instance .] rx_0

  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 system_ila_0 ]
  set_property -dict [ list \
   CONFIG.C_BRAM_CNT {24} \
   CONFIG.C_DATA_DEPTH {4096} \
   CONFIG.C_MON_TYPE {MIX} \
   CONFIG.C_NUM_MONITOR_SLOTS {4} \
   CONFIG.C_NUM_OF_PROBES {3} \
   CONFIG.C_PROBE0_TYPE {0} \
   CONFIG.C_SLOT_0_APC_EN {1} \
   CONFIG.C_SLOT_0_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_0_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_1_APC_EN {1} \
   CONFIG.C_SLOT_1_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_1_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_1_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_1_TYPE {0} \
   CONFIG.C_SLOT_2_APC_EN {1} \
   CONFIG.C_SLOT_2_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_2_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_2_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_2_TYPE {0} \
   CONFIG.C_SLOT_3_APC_EN {1} \
   CONFIG.C_SLOT_3_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_3_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_3_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_4_APC_EN {1} \
   CONFIG.C_SLOT_4_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_4_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_4_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
 ] $system_ila_0

  # Create instance: tx_0
  create_hier_cell_tx_0 [current_bd_instance .] tx_0

  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_1

  # Create instance: util_vector_logic_2, and set properties
  set util_vector_logic_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_2 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_2

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {8} \
 ] $xlconcat_2

  # Create interface connections
connect_bd_intf_net -intf_net Conn [get_bd_intf_pins rx_0/S_AXIS_LO] [get_bd_intf_pins system_ila_0/SLOT_0_AXIS]
connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins rx_0/S_AXIS] [get_bd_intf_pins system_ila_0/SLOT_1_AXIS]
  connect_bd_intf_net -intf_net PS_M01_AXI [get_bd_intf_pins PS/M01_AXI] [get_bd_intf_pins rx_0/S_AXI]
  connect_bd_intf_net -intf_net S_AXI_CFG_1 [get_bd_intf_pins PS/M03_AXI] [get_bd_intf_pins tx_0/S_AXI_CFG]
  connect_bd_intf_net -intf_net fifo_0_M_AXIS [get_bd_intf_pins ADC/M_AXIS_ADC0] [get_bd_intf_pins rx_0/S_AXIS_RF]
connect_bd_intf_net -intf_net [get_bd_intf_nets fifo_0_M_AXIS] [get_bd_intf_pins ADC/M_AXIS_ADC0] [get_bd_intf_pins system_ila_0/SLOT_3_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets fifo_0_M_AXIS]
  connect_bd_intf_net -intf_net ps_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins PS/DDR]
  connect_bd_intf_net -intf_net ps_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins PS/FIXED_IO]
  connect_bd_intf_net -intf_net ps_0_axi_periph_M00_AXI [get_bd_intf_pins PS/M00_AXI] [get_bd_intf_pins RxConfigReg/S_AXI]
  connect_bd_intf_net -intf_net ps_0_axi_periph_M02_AXI [get_bd_intf_pins PS/M02_AXI] [get_bd_intf_pins rx_0/S_AXI_OUT]
  connect_bd_intf_net -intf_net rx_0_M_AXIS_COSINE [get_bd_intf_pins DAC/S_AXIS_DAC1] [get_bd_intf_pins rx_0/M_AXIS_DAC1]
connect_bd_intf_net -intf_net [get_bd_intf_nets rx_0_M_AXIS_COSINE] [get_bd_intf_pins rx_0/M_AXIS_DAC1] [get_bd_intf_pins system_ila_0/SLOT_2_AXIS]
  connect_bd_intf_net -intf_net tx_0_M_AXIS [get_bd_intf_pins DAC/S_AXIS_DAC0] [get_bd_intf_pins tx_0/M_AXIS_TX]

  # Create port connections
  connect_bd_net -net ADC_adc_csn_o [get_bd_ports adc_csn_o] [get_bd_pins ADC/adc_csn_o]
  connect_bd_net -net DAC_dac_rst [get_bd_ports dac_rst_o] [get_bd_pins DAC/dac_rst]
  connect_bd_net -net RxConfigReg_DDSReset [get_bd_pins RxConfigReg/DDSReset] [get_bd_pins util_vector_logic_2/Op1] [get_bd_pins xlconcat_2/In5]
  connect_bd_net -net RxConfigReg_TxForceOn [get_bd_pins RxConfigReg/TxForceOn] [get_bd_pins tx_0/pulse_on_in]
  connect_bd_net -net RxConfigReg_rx_fifo_reset [get_bd_pins RxConfigReg/rx_fifo_reset] [get_bd_pins rx_0/reset_fifo] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net RxFTW [get_bd_pins RxConfigReg/RxPIR] [get_bd_pins rx_0/RxPIR]
  connect_bd_net -net adc_clk_n_i_1 [get_bd_ports adc_clk_n_i] [get_bd_pins clk_wiz_0/clk_in1_n]
  connect_bd_net -net adc_clk_p_i_1 [get_bd_ports adc_clk_p_i] [get_bd_pins clk_wiz_0/clk_in1_p]
  connect_bd_net -net adc_dat_a_i_1 [get_bd_ports adc_dat_a_i] [get_bd_pins ADC/adc_dat_a_i]
  connect_bd_net -net adc_dat_b_i_1 [get_bd_ports adc_dat_b_i] [get_bd_pins ADC/adc_dat_b_i]
  connect_bd_net -net aresetn_1 [get_bd_pins RxConfigReg/TxReset] [get_bd_pins tx_0/TxReset] [get_bd_pins xlconcat_2/In4]
  connect_bd_net -net aresetn_dds_1 [get_bd_pins rx_0/aresetn_dds] [get_bd_pins system_ila_0/probe1] [get_bd_pins tx_0/aresetn_dds] [get_bd_pins util_vector_logic_2/Res]
  connect_bd_net -net cfg_data1_1 [get_bd_pins RxConfigReg/RxRate] [get_bd_pins rx_0/RxRate]
  connect_bd_net -net clk_wiz_0_clk_125 [get_bd_pins ADC/aclk] [get_bd_pins DAC/clk125] [get_bd_pins DAC/s_axis_aclk] [get_bd_pins PS/aclk] [get_bd_pins RxConfigReg/aclk] [get_bd_pins clk_wiz_0/clk_125] [get_bd_pins rx_0/aclk] [get_bd_pins system_ila_0/clk] [get_bd_pins tx_0/aclk]
  connect_bd_net -net clk_wiz_0_clk_250_p1 [get_bd_pins DAC/ddr_clk] [get_bd_pins clk_wiz_0/clk_250_p1]
  connect_bd_net -net clk_wiz_0_clk_250_p2 [get_bd_pins DAC/wrt_clk] [get_bd_pins clk_wiz_0/clk_250_p2]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins DAC/locked] [get_bd_pins PS/dcm_locked] [get_bd_pins clk_wiz_0/locked]
  connect_bd_net -net dac_0_dac_clk [get_bd_ports dac_clk_o] [get_bd_pins DAC/dac_clk]
  connect_bd_net -net dac_0_dac_dat [get_bd_ports dac_dat_o] [get_bd_pins DAC/dac_dat]
  connect_bd_net -net dac_0_dac_sel [get_bd_ports dac_sel_o] [get_bd_pins DAC/dac_sel]
  connect_bd_net -net dac_0_dac_wrt [get_bd_ports dac_wrt_o] [get_bd_pins DAC/dac_wrt]
  connect_bd_net -net rst_0_peripheral_aresetn [get_bd_pins ADC/aresetn] [get_bd_pins DAC/s_axis_aresetn] [get_bd_pins PS/peripheral_aresetn] [get_bd_pins RxConfigReg/aresetn] [get_bd_pins rx_0/aresetn] [get_bd_pins system_ila_0/probe0] [get_bd_pins system_ila_0/resetn] [get_bd_pins tx_0/s_axis_aresetn]
  connect_bd_net -net tx_0_blank [get_bd_pins tx_0/blank] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net tx_0_pulse_out [get_bd_pins tx_0/pulse_out] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net tx_0_sync [get_bd_pins system_ila_0/probe2] [get_bd_pins tx_0/sync] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_ports exp_n_tri_io] [get_bd_pins util_vector_logic_1/Res]
  connect_bd_net -net xlconcat_2_dout [get_bd_ports exp_p_tri_io] [get_bd_ports led_o] [get_bd_pins util_vector_logic_1/Op1] [get_bd_pins xlconcat_2/dout]

  # Create address segments
  assign_bd_address -offset 0x40000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/ps_0/Data] [get_bd_addr_segs RxConfigReg/cfg_rx/S_AXI/reg0] -force
  assign_bd_address -offset 0x40002000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/ps_0/Data] [get_bd_addr_segs tx_0/TxConfigReg/cfg_tx/S_AXI/reg0] -force
  assign_bd_address -offset 0x40010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces PS/ps_0/Data] [get_bd_addr_segs rx_0/reader_rx/S_AXI/reg0] -force
  assign_bd_address -offset 0x40001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/ps_0/Data] [get_bd_addr_segs rx_0/sts_rx/S_AXI/reg0] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Color Coded",
   "Color Coded_ExpandedHierarchyInLayout":"",
   "Color Coded_Layout":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 5 -x 2000 -y 100 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 5 -x 2000 -y 120 -defaultsOSRD
preplace port Vaux0 -pg 1 -lvl 0 -x -120 -y 20 -defaultsOSRD
preplace port Vaux1 -pg 1 -lvl 0 -x -120 -y 40 -defaultsOSRD
preplace port Vaux8 -pg 1 -lvl 0 -x -120 -y 60 -defaultsOSRD
preplace port Vaux9 -pg 1 -lvl 0 -x -120 -y 80 -defaultsOSRD
preplace port Vp_Vn -pg 1 -lvl 0 -x -120 -y 100 -defaultsOSRD
preplace port adc_clk_n_i -pg 1 -lvl 0 -x -120 -y 315 -defaultsOSRD
preplace port adc_clk_p_i -pg 1 -lvl 0 -x -120 -y 340 -defaultsOSRD
preplace port adc_csn_o -pg 1 -lvl 5 -x 2000 -y 140 -defaultsOSRD
preplace port adc_enc_n_o -pg 1 -lvl 5 -x 2000 -y 20 -defaultsOSRD
preplace port adc_enc_p_o -pg 1 -lvl 5 -x 2000 -y 40 -defaultsOSRD
preplace port dac_clk_o -pg 1 -lvl 5 -x 2000 -y 300 -defaultsOSRD
preplace port dac_rst_o -pg 1 -lvl 5 -x 2000 -y 340 -defaultsOSRD
preplace port dac_sel_o -pg 1 -lvl 5 -x 2000 -y 360 -defaultsOSRD
preplace port dac_wrt_o -pg 1 -lvl 5 -x 2000 -y 380 -defaultsOSRD
preplace portBus adc_dat_a_i -pg 1 -lvl 0 -x -120 -y 135 -defaultsOSRD
preplace portBus adc_dat_b_i -pg 1 -lvl 0 -x -120 -y 160 -defaultsOSRD
preplace portBus dac_dat_o -pg 1 -lvl 5 -x 2000 -y 320 -defaultsOSRD
preplace portBus dac_pwm_o -pg 1 -lvl 5 -x 2000 -y 60 -defaultsOSRD
preplace portBus exp_n_tri_io -pg 1 -lvl 5 -x 2000 -y 760 -defaultsOSRD
preplace portBus exp_p_tri_io -pg 1 -lvl 5 -x 2000 -y 700 -defaultsOSRD
preplace portBus led_o -pg 1 -lvl 5 -x 2000 -y 680 -defaultsOSRD
preplace inst ADC -pg 1 -lvl 1 -x 190 -y 160 -defaultsOSRD
preplace inst DAC -pg 1 -lvl 4 -x 1788 -y 450 -defaultsOSRD
preplace inst PS -pg 1 -lvl 2 -x 659 -y 160 -defaultsOSRD -resize 335 190
preplace inst RxConfigReg -pg 1 -lvl 1 -x 190 -y 506 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 1 -x 190 -y 320 -defaultsOSRD
preplace inst rx_0 -pg 1 -lvl 3 -x 1301 -y 284 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 4 -x 1788 -y 190 -defaultsOSRD
preplace inst tx_0 -pg 1 -lvl 3 -x 1301 -y 544 -defaultsOSRD -resize 243 160
preplace inst util_vector_logic_1 -pg 1 -lvl 4 -x 1788 -y 800 -defaultsOSRD
preplace inst util_vector_logic_2 -pg 1 -lvl 2 -x 659 -y 640 -defaultsOSRD
preplace inst xlconcat_2 -pg 1 -lvl 3 -x 1301 -y 824 -defaultsOSRD
preplace netloc ADC_adc_csn_o 1 1 4 340 40 NJ 40 NJ 40 1970
preplace netloc DAC_dac_rst 1 4 1 1960 340n
preplace netloc RxConfigReg_DDSReset 1 1 2 340 570 850
preplace netloc RxConfigReg_TxForceOn 1 1 2 NJ 516 870
preplace netloc RxConfigReg_rx_fifo_reset 1 1 2 360J 550 860
preplace netloc RxFTW 1 1 2 360J 414 940
preplace netloc adc_clk_n_i_1 1 0 1 -100 315n
preplace netloc adc_clk_p_i_1 1 0 1 N 340
preplace netloc adc_dat_a_i_1 1 0 1 -100 135n
preplace netloc adc_dat_b_i_1 1 0 1 -100 160n
preplace netloc aresetn_1 1 1 2 N 536 920J
preplace netloc aresetn_dds_1 1 2 2 880 104 1470
preplace netloc cfg_data1_1 1 1 2 350J 394 950
preplace netloc clk_wiz_0_clk_125 1 0 4 -80 70 380 404 960 114 1450
preplace netloc clk_wiz_0_clk_250_p1 1 1 3 370 424 920 124 1510
preplace netloc clk_wiz_0_clk_250_p2 1 1 3 340 444 N 444 1470
preplace netloc clk_wiz_0_locked 1 1 3 390J 434 NJ 434 1490J
preplace netloc dac_0_dac_clk 1 4 1 1940 300n
preplace netloc dac_0_dac_dat 1 4 1 1950 320n
preplace netloc dac_0_dac_sel 1 4 1 1970 360n
preplace netloc dac_0_dac_wrt 1 4 1 1980 380n
preplace netloc rst_0_peripheral_aresetn 1 0 4 -90 616 390 580 890 134 1500J
preplace netloc tx_0_blank 1 2 2 950 660 1510
preplace netloc tx_0_pulse_out 1 2 2 940 640 1470
preplace netloc tx_0_sync 1 2 2 960 650 1530
preplace netloc util_vector_logic_1_Res 1 4 1 1960 760n
preplace netloc xlconcat_2_dout 1 3 2 1480 700 1960
preplace netloc rx_0_M_AXIS_COSINE 1 3 1 1480 150n
preplace netloc ps_0_FIXED_IO 1 2 3 860J 50 NJ 50 1940
preplace netloc S_AXI_CFG_1 1 2 1 930 184n
preplace netloc tx_0_M_AXIS 1 3 1 1460 380n
preplace netloc Conn 1 3 1 1490 110n
preplace netloc ps_0_axi_periph_M00_AXI 1 0 3 -70 606 380 560 850
preplace netloc fifo_0_M_AXIS 1 1 3 370 270 910 144 1460
preplace netloc ps_0_axi_periph_M02_AXI 1 2 1 940 168n
preplace netloc PS_M01_AXI 1 2 1 900 152n
preplace netloc Conn3 1 3 1 1520 130n
preplace netloc ps_0_DDR 1 2 3 850J 30 NJ 30 1980
levelinfo -pg 1 -120 190 659 1301 1788 2000
pagesize -pg 1 -db -bbox -sgen -300 -130 2170 1690
",
   "Color Coded_ScaleFactor":"1.0",
   "Color Coded_TopLeft":"-585,-211",
   "Default View_ScaleFactor":"0.402058",
   "Default View_TopLeft":"-393,-883",
   "Display-PortTypeClock":"true",
   "Display-PortTypeOthers":"true",
   "Display-PortTypeReset":"true",
   "ExpandedHierarchyInLayout":"",
   "Grouping and No Loops_ScaleFactor":"0.865506",
   "Grouping and No Loops_TopLeft":"-129,-106",
   "Interfaces View_Layers":"/clk_wiz_0_clk_250_p1:false|/DAC/dac_0_dac_clk:false|/clk_wiz_0_clk_125:false|/PS/ps_0_FCLK_CLK0:false|/PS/rst_0_peripheral_aresetn:false|/PS/ps_0_FCLK_RESET0_N:false|/clk_wiz_0_clk_250_p2:false|/PS/rst_0_interconnect_aresetn:false|/DAC/dac_0_dac_rst:false|",
   "Interfaces View_ScaleFactor":"1.0",
   "Interfaces View_TopLeft":"-300,-171",
   "PinnedBlocks":"",
   "PinnedPorts":"",
   "Reduced Jogs_Layers":"/clk_wiz_0_clk_250_p1:true|/DAC/dac_0_dac_clk:true|/clk_wiz_0_clk_125:true|/PS/ps_0_FCLK_CLK0:true|/PS/rst_0_peripheral_aresetn:true|/PS/ps_0_FCLK_RESET0_N:true|/clk_wiz_0_clk_250_p2:true|/PS/rst_0_interconnect_aresetn:true|/DAC/dac_0_dac_rst:true|",
   "Reduced Jogs_ScaleFactor":"0.80804",
   "Reduced Jogs_TopLeft":"-176,-62",
   "commentid":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 5 -x 2060 -y 48 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 5 -x 2060 -y 70 -defaultsOSRD
preplace port Vaux0 -pg 1 -lvl 0 -x -220 -y 20 -defaultsOSRD
preplace port Vaux1 -pg 1 -lvl 0 -x -220 -y 40 -defaultsOSRD
preplace port Vaux8 -pg 1 -lvl 0 -x -220 -y 60 -defaultsOSRD
preplace port Vaux9 -pg 1 -lvl 0 -x -220 -y 80 -defaultsOSRD
preplace port Vp_Vn -pg 1 -lvl 0 -x -220 -y 100 -defaultsOSRD
preplace port adc_clk_n_i -pg 1 -lvl 0 -x -220 -y 440 -defaultsOSRD
preplace port adc_clk_p_i -pg 1 -lvl 0 -x -220 -y 460 -defaultsOSRD
preplace port adc_csn_o -pg 1 -lvl 5 -x 2060 -y 115 -defaultsOSRD
preplace port adc_enc_n_o -pg 1 -lvl 5 -x 2060 -y 20 -defaultsOSRD
preplace port adc_enc_p_o -pg 1 -lvl 5 -x 2060 -y 90 -defaultsOSRD
preplace port dac_clk_o -pg 1 -lvl 5 -x 2060 -y 485 -defaultsOSRD
preplace port dac_rst_o -pg 1 -lvl 5 -x 2060 -y 530 -defaultsOSRD
preplace port dac_sel_o -pg 1 -lvl 5 -x 2060 -y 550 -defaultsOSRD
preplace port dac_wrt_o -pg 1 -lvl 5 -x 2060 -y 570 -defaultsOSRD
preplace portBus adc_dat_a_i -pg 1 -lvl 0 -x -220 -y 260 -defaultsOSRD
preplace portBus adc_dat_b_i -pg 1 -lvl 0 -x -220 -y 280 -defaultsOSRD
preplace portBus dac_dat_o -pg 1 -lvl 5 -x 2060 -y 510 -defaultsOSRD
preplace portBus dac_pwm_o -pg 1 -lvl 5 -x 2060 -y 140 -defaultsOSRD
preplace portBus exp_n_tri_io -pg 1 -lvl 5 -x 2060 -y 725 -defaultsOSRD
preplace portBus exp_p_tri_io -pg 1 -lvl 5 -x 2060 -y 670 -defaultsOSRD
preplace portBus led_o -pg 1 -lvl 5 -x 2060 -y 645 -defaultsOSRD
preplace inst ADC -pg 1 -lvl 1 -x 10 -y 300 -defaultsOSRD
preplace inst DAC -pg 1 -lvl 4 -x 1867 -y 530 -defaultsOSRD
preplace inst PS -pg 1 -lvl 2 -x 840 -y 110 -defaultsOSRD -resize 335 190
preplace inst RxConfigReg -pg 1 -lvl 1 -x 10 -y 640 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 1 -x 10 -y 460 -defaultsOSRD
preplace inst rx_0 -pg 1 -lvl 3 -x 1331 -y 280 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 4 -x 1867 -y -86 -defaultsOSRD
preplace inst tx_0 -pg 1 -lvl 3 -x 1331 -y 540 -defaultsOSRD -resize 243 160
preplace inst util_vector_logic_1 -pg 1 -lvl 4 -x 1867 -y 730 -defaultsOSRD
preplace inst util_vector_logic_2 -pg 1 -lvl 2 -x 840 -y 530 -defaultsOSRD
preplace inst xlconcat_2 -pg 1 -lvl 4 -x 1867 -y 285 -defaultsOSRD
preplace netloc ADC_adc_csn_o 1 1 4 160J -20 1100J -16 1590J 80 2020
preplace netloc DAC_dac_rst 1 4 1 N 530
preplace netloc RxConfigReg_DDSReset 1 1 3 190 410 NJ 410 1550J
preplace netloc RxConfigReg_TxForceOn 1 1 2 NJ 650 1070
preplace netloc RxConfigReg_rx_fifo_reset 1 1 3 230J 420 1130 420 1510
preplace netloc RxFTW 1 1 2 180J 300 1050J
preplace netloc adc_clk_n_i_1 1 0 1 -190 440n
preplace netloc adc_clk_p_i_1 1 0 1 -200 460n
preplace netloc adc_dat_a_i_1 1 0 1 -190 260n
preplace netloc adc_dat_b_i_1 1 0 1 -200 280n
preplace netloc aresetn_1 1 1 3 NJ 670 1130J 660 1590J
preplace netloc aresetn_dds_1 1 2 2 1110 -26 NJ
preplace netloc cfg_data1_1 1 1 2 210J 320 1070J
preplace netloc clk_wiz_0_clk_125 1 0 4 -160 210 170 330 1120 650 1560
preplace netloc clk_wiz_0_clk_250_p1 1 1 3 200J 440 NJ 440 1480
preplace netloc clk_wiz_0_clk_250_p2 1 1 3 220 470 1030J 630 1600J
preplace netloc clk_wiz_0_locked 1 1 3 200J 430 NJ 430 1490J
preplace netloc dac_0_dac_clk 1 4 1 2030 485n
preplace netloc dac_0_dac_dat 1 4 1 N 510
preplace netloc dac_0_dac_sel 1 4 1 N 550
preplace netloc dac_0_dac_wrt 1 4 1 N 570
preplace netloc rst_0_peripheral_aresetn 1 0 4 -180 -30 N -30 1080 640 1570J
preplace netloc tx_0_blank 1 3 1 1540 255n
preplace netloc tx_0_pulse_out 1 3 1 1530 235n
preplace netloc tx_0_sync 1 3 1 1520 -6n
preplace netloc util_vector_logic_1_Res 1 4 1 2030 725n
preplace netloc xlconcat_2_dout 1 3 2 1550 670 2020
preplace netloc Conn 1 3 1 1480 -166n
preplace netloc Conn3 1 3 1 1490 -146n
preplace netloc PS_M01_AXI 1 2 1 1100 102n
preplace netloc S_AXI_CFG_1 1 2 1 1060 134n
preplace netloc fifo_0_M_AXIS 1 1 3 NJ 290 1040 -106 N
preplace netloc ps_0_DDR 1 2 3 NJ 54 NJ 54 2020J
preplace netloc ps_0_FIXED_IO 1 2 3 NJ 70 NJ 70 NJ
preplace netloc ps_0_axi_periph_M00_AXI 1 0 3 -170 -10 N -10 1030
preplace netloc ps_0_axi_periph_M02_AXI 1 2 1 1090 118n
preplace netloc rx_0_M_AXIS_COSINE 1 3 1 1500 -126n
preplace netloc tx_0_M_AXIS 1 3 1 1580 460n
levelinfo -pg 1 -220 10 840 1331 1867 2060
pagesize -pg 1 -db -bbox -sgen -400 -230 2230 1570
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_PulsedNMR()
cr_bd_PulsedNMR ""
set_property GENERATE_SYNTH_CHECKPOINT "0" [get_files PulsedNMR.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files PulsedNMR.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse PulsedNMR.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/PulsedNMR.gen/sources_1/bd/PulsedNMR/hdl/PulsedNMR_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse PulsedNMR.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z010clg400-1 -flow {Vivado Synthesis 2016} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2016" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.fanout_limit" -value "400" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z010clg400-1 -flow {Vivado Implementation 2016} -strategy "Performance_NetDelay_high" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_NetDelay_high" [get_runs impl_1]
  set_property flow "Vivado Implementation 2016" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Performance_NetDelay_high" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraNetDelay_high" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "AggressiveExplore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
